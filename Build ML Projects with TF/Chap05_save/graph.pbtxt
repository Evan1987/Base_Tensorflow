node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?\'B_\217\"M\367\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?\357v\347\263\276\235\367?f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?f\200\371c\222e\323?f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?\'B_\217\"M\367\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277E\255\330\321!#\322\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?f\200\371c\222e\323?xm\325\003\353\325\353\277f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?\357v\347\263\276\235\367?f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?\357v\347\263\276\235\367?f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?E\255\330\321!#\322\277xm\325\003\353\325\353\277f\200\371c\222e\323?\357v\347\263\276\235\367?f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?f\200\371c\222e\323?f\200\371c\222e\323?f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?\357v\347\263\276\235\367?\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?\357v\347\263\276\235\367?\357v\347\263\276\235\367?\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277E\255\330\321!#\322\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?\357v\347\263\276\235\367?f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277\'B_\217\"M\367\277f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?\357v\347\263\276\235\367?f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?f\200\371c\222e\323?\357v\347\263\276\235\367?f\200\371c\222e\323?\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277f\200\371c\222e\323?f\200\371c\222e\323?f\200\371c\222e\323?f\200\371c\222e\323?f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?f\200\371c\222e\323?\357v\347\263\276\235\367?\357v\347\263\276\235\367?xm\325\003\353\325\353\277xm\325\003\353\325\353\277\357v\347\263\276\235\367?xm\325\003\353\325\353\277f\200\371c\222e\323?xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277xm\325\003\353\325\353\277"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\203\325\020X\364\374\341\277p\252&\326\333J\367?\370G5\215\304\031\355\277\225\351\315/\271\025\322?A?<\030Z\345\350\277p\252&\326\333J\367?\353P\341\017w\230\350\277\225\351\315/\271\025\322?\335\267(\232\347\210\360?Z\363\'\232\300\215\361\277\2075f7\333\232\362\2775;\310h\010\215\340?\263\254\223\273L\301\362\277\233!TZMq\367?9\336\t\315^1\346\277\225\351\315/\271\025\322?\335\267(\232\347\210\360?\260\341\202\242\243\332\361\277\000\251g\330\277\315\357\277d6\372\311V\335\235?\220\314d\325A~\346\277\333\360\007\247\007\315\376?\r\305wP\253|\362?N6\220\225\247f\355\277\342\2206Q\251\\\327\277\262@\373\025vb\360?S\314\261\307\3713\357\277@\340\303\244\207]\332\277\262@\373\025vb\360?\262@\373\025vb\360?\237\025\021\224]\260\325?\2075f7\333\232\362\277@\340\303\244\207]\332\277\376\006\003\340}?\374?\225\351\315/\271\025\322?\225\000\254\352\333\274\243?S\314\261\307\3713\357\277\r\305wP\253|\362?\037R\355\377J\313\370?\346\272\277\335$\313\346\277\370G5\215\304\031\355\2775;\310h\010\215\340??g\013\315\254\'\344?\324-J.\205|\340\2779\336\t\315^1\346\277\370\345Zp\014\213\250?\333\360\007\247\007\315\376?\001:\274x4Z\360\277[R\240\r\223\025\360?\324-J.\205|\340\277\336\322Ej\004M\312\277\324-J.\205|\340\277p\252&\326\333J\367?\343\357\256\304{\344\345\277\370G5\215\304\031\355\277\313G\021\'bg\002@A?<\030Z\345\350\277K\362\306\244#J\326?+\210=\334>(\323\277N6\220\225\247f\355\277\233!TZMq\367?5;\310h\010\215\340?\232\370\2479\346\030\352\277~?\357%\242/\340\277\000\251g\330\277\315\357\277\342\2206Q\251\\\327\277\347\255\237\253 \364\342?\232\370\2479\346\030\352\277\335\267(\232\347\210\360?,\261\351\374\245\200\360\2779\336\t\315^1\346\2773\246\203\242\312\325\360?J\014\007\t,\370\335\277\r\305wP\253|\362?,\261\351\374\245\200\360\277\343\357\256\304{\344\345\277K\362\306\244#J\326?\331\303k`\327I\342\277\346\272\277\335$\313\346\277\360\346\002B\311e\352\277\234\303\270R\217\377\352\277\342\2206Q\251\\\327\277S\314\261\307\3713\357\277p\252&\326\333J\367?\251\272\014\320\334\200\357\277\336\322Ej\004M\312\277p\252&\326\333J\367?\225b\206\007\224K\350\277\324-J.\205|\340\277\233!TZMq\367?\263\254\223\273L\301\362\277^8\027\320\361\223\001@\324-J.\205|\340\277[R\240\r\223\025\360?\346\272\277\335$\313\346\277[R\240\r\223\025\360?\225\351\315/\271\025\322?S\314\261\307\3713\357\277\324-J.\205|\340\2772}\327\201c}\343\2779\336\t\315^1\346\277\370G5\215\304\031\355\277\233!TZMq\367?\360\346\002B\311e\352\277/|\372\025Og\361\277p\252&\326\333J\367?\370G5\215\304\031\355\277\235/Q\370e^\335\277N6\220\225\247f\355\277N6\220\225\247f\355\277d6\372\311V\335\235?\216m\354ao\366\327\277S\314\261\307\3713\357\2775;\310h\010\215\340?\371\211O\304|t\003@\350\205\320\366\315\261\347\2775;\310h\010\215\340?\223\212U\274\346\215\343?5;\310h\010\215\340?9\336\t\315^1\346\277N6\220\225\247f\355\2775;\310h\010\215\340?\370G5\215\304\031\355\277[R\240\r\223\025\360?,\261\351\374\245\200\360\277p\252&\326\333J\367?9\336\t\315^1\346\277\202\237D\005\211\315\360\277\376\006\003\340}?\374?S\314\261\307\3713\357\277p\252&\326\333J\367?\233!TZMq\367?\370\345Zp\014\213\250?N6\220\225\247f\355\277\370G5\215\304\031\355\277Kk\177|\376\177\354\277\251\272\014\320\334\200\357\277/|\372\025Og\361\277\r\305wP\253|\362?\316*!8\026\223\274\277\t\233\356\303/\016\363\277\347\255\237\253 \364\342?\216Ef\206\265\207\003@K\362\306\244#J\326?\370G5\215\304\031\355\277\251\272\014\320\334\200\357\277\370\345Zp\014\213\250?\343\357\256\304{\344\345\277[R\240\r\223\025\360?\347\255\237\253 \364\342?\370\345Zp\014\213\250?\336\322Ej\004M\312\277N6\220\225\247f\355\277\r\305wP\253|\362?\001:\274x4Z\360\277\233!TZMq\367?\333\360\007\247\007\315\376?\333\360\007\247\007\315\376?\251\272\014\320\334\200\357\277\030\010\350^\243\260\300\277\347\255\237\253 \364\342?\313G\021\'bg\002@~?\357%\242/\340\277[R\240\r\223\025\360?\324-J.\205|\340\277\225\000\254\352\333\274\243?\370G5\215\304\031\355\277\324-J.\205|\340\277\220\314d\325A~\346\277\r\305wP\253|\362?N6\220\225\247f\355\277S\314\261\307\3713\357\2775;\310h\010\215\340?,\261\351\374\245\200\360\277N6\220\225\247f\355\277\237\025\021\224]\260\325?\253KapQ\r\360\277\r\305wP\253|\362?\220\314d\325A~\346\277\225\351\315/\271\025\322?9\336\t\315^1\346\277\360\346\002B\311e\352\277\350\205\320\366\315\261\347\277\324-J.\205|\340\277\203\325\020X\364\374\341\2775;\310h\010\215\340?N6\220\225\247f\355\277\225\351\315/\271\025\322?\223\212U\274\346\215\343?\251\272\014\320\334\200\357\277p\252&\326\333J\367?\333\360\007\247\007\315\376?\216Ef\206\265\207\003@[R\240\r\223\025\360?\324-J.\205|\340\277N6\220\225\247f\355\277\334\216|y\2000\343\277N6\220\225\247f\355\277\370G5\215\304\031\355\277,\261\351\374\245\200\360\277\037R\355\377J\313\370?\237\025\021\224]\260\325?@\340\303\244\207]\332\277[R\240\r\223\025\360?\237\025\021\224]\260\325?N6\220\225\247f\355\277p\252&\326\333J\367?\220\314d\325A~\346\277\220\314d\325A~\346\277^8\027\320\361\223\001@\331\303k`\327I\342\277\233!TZMq\367?/|\372\025Og\361\277p\252&\326\333J\367?\335\267(\232\347\210\360?\347\255\237\253 \364\342?\r\305wP\253|\362?\001:\274x4Z\360\277K\362\306\244#J\326?\227-\227 =2\351\277\370G5\215\304\031\355\277N6\220\225\247f\355\277\263\254\223\273L\301\362\277\370\345Zp\014\213\250?\r\305wP\253|\362?,\261\351\374\245\200\360\2775;\310h\010\215\340?[R\240\r\223\025\360?5;\310h\010\215\340?\r\305wP\253|\362?\365|$t\0333\354\277p\252&\326\333J\367?@\340\303\244\207]\332\277K\362\306\244#J\326?\343\357\256\304{\344\345\277\360\346\002B\311e\352\277\331\215\237\rl\032\361\277\370G5\215\304\031\355\277\333\360\007\247\007\315\376?K\362\306\244#J\326?\333\360\007\247\007\315\376?K\362\306\244#J\326?^8\027\320\361\223\001@@\340\303\244\207]\332\277\370\345Zp\014\213\250?\235/Q\370e^\335\277\353P\341\017w\230\350\277\233!TZMq\367?\000\251g\330\277\315\357\277p\252&\326\333J\367?\220\314d\325A~\346\277\356\033\362( \177\351\277\350\205\320\366\315\261\347\277N6\220\225\247f\355\277\370G5\215\304\031\355\277\333\360\007\247\007\315\376?\343\357\256\304{\344\345\277\324-J.\205|\340\277\\\2768\263it\362\277\r\305wP\253|\362?N6\220\225\247f\355\277\r\305wP\253|\362?\346\272\277\335$\313\346\277\223\212U\274\346\215\343?N6\220\225\247f\355\277/|\372\025Og\361\277\363\261\023[rL\353\2775;\310h\010\215\340?\360\346\002B\311e\352\277\333\360\007\247\007\315\376?\324-J.\205|\340\277\237\025\021\224]\260\325?\251\272\014\320\334\200\357\277+\210=\334>(\323\2775;\310h\010\215\340?K\362\306\244#J\326?\3158\260\210`\'\320\2775;\310h\010\215\340?9\336\t\315^1\346\277S\314\261\307\3713\357\277@\340\303\244\207]\332\277\370G5\215\304\031\355\277\331\303k`\327I\342\277\216Ef\206\265\207\003@\370\345Zp\014\213\250?\r\305wP\253|\362?p\252&\326\333J\367?\324-J.\205|\340\277\342\2206Q\251\\\327\277p\252&\326\333J\367?\234\303\270R\217\377\352\277\225\351\315/\271\025\322?N6\220\225\247f\355\277\232\370\2479\346\030\352\277S\314\261\307\3713\357\277\244$\353\235\212\263\355\277\370G5\215\304\031\355\277,\261\351\374\245\200\360\277"
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\215\354\003|\312\177\335\277v\236\357?\354c\360?\237lE$o7\353\277o\377\363\275\332B\262\277a1\342\210\005D\327\277\347g\311\023\253\006\376?\247S\316\276\331\266\310\277\313SQ\017#&\324\277\360\'\352g}\342\354?|qD\205|\327\363\277\320\022r\377\330\215\355\277a1\342\210\005D\327\277\313SQ\017#&\324\277\216\361\205-!\217\361?\310u7\244d\272\276\277o\377\363\275\332B\262\277v\236\357?\354c\360?|qD\205|\327\363\277\001\271\236\332B\344\357\277\247S\316\276\331\266\310\277\331\350\207\317\"\303\345\277\364(\352\313\231V\362?\364(\352\313\231V\362?\331\350\207\317\"\303\345\277\364\331\031\333L\233\277?\364(\352\313\231V\362?\346\223\263\013\232\271\360\277\313SQ\017#&\324\277\002\250+\020\"\232\332?\376g\252\214\235\213\001@&\250\256`k\t\306?\320\022r\377\330\215\355\277\313SQ\017#&\324\277\347g\311\023\253\006\376?\302};?\331\360\333\277\313SQ\017#&\324\277\237lE$o7\353\277\364(\352\313\231V\362?\353R\324\373O!\372?z\230\254\313\024{\302\277\313SQ\017#&\324\277a1\342\210\005D\327\277&\250\256`k\t\306?\313SQ\017#&\324\277\351@a\315\022c\317?\302};?\331\360\333\277\364(\352\313\231V\362?\320\022r\377\330\215\355\277\212\360\205\311\004\033\354?a1\342\210\005D\327\277\013~A\340k\317\322?a1\342\210\005D\327\277\375\350\n l2\341?\302};?\331\360\333\277s\261#1\252\373\344\277\254\230\321\363\264\324\005@\302};?\331\360\333\277o\377\363\275\332B\262\277\375\350\n l2\341?\255\027q`\346-\366\277Y`Nj\022\036\363?\t\217\264\252\214\031\350\277\331\350\207\317\"\303\345\277\335\323\222\267\307\335\341\277\346\223\263\013\232\271\360\277\335Pi\003\374\317\251?&\250\256`k\t\306?\331\350\207\317\"\303\345\277v\236\357?\354c\360?\320\022r\377\330\215\355\277Sc\320S0E\314?\371\375\3777\307\027\345?s\261#1\252\373\344\277\360\'\352g}\342\354?\324\375|\347}\250\351\277\335\323\222\267\307\335\341\277\313SQ\017#&\324\277\247S\316\276\331\266\310\277\022e\312z\326N\340\277\367\016s\002\350a\332\277\324\375|\347}\250\351\277\230\205\274\211\004\270\335?\311U\0226\300s\363\277i\335\316\207\375\023\374?\324\375|\347}\250\351\277&\250\256`k\t\306?m\310\331o\242.\370?\000\345\210\3221\227\322\277\t\217\264\252\214\031\350\277\212\006{E|t\365?o\377\363\275\332B\262\277<\255\247R\364\204\002@5v\300\225@\010\321\277\223\306\233\231NP\344?5v\300\225@\010\321\277\371\375\3777\307\027\345?o\377\363\275\332B\262\277\005\244\251\302\347\376\353\277\226\302\031L\024\265\325\277Z$\302^C-\227\277\005\244\251\302\347\376\353\277\335\323\222\267\307\335\341\277%\271!+\214S\353?\331\350\207\317\"\303\345\277K\313\027\252\022\201\361\277\347g\311\023\253\006\376?X[\314\270\273\016\337\277\005\244\251\302\347\376\353\2775v\300\225@\010\321\277\331\350\207\317\"\303\345\277\247S\316\276\331\266\310\277\307\036\370\347\207_\271?\005\244\251\302\347\376\353\277\t\217\264\252\214\031\350\277\353\335\316\271\013\316\006@\331\350\207\317\"\303\345\277\250B[\364\270l\343\277\313SQ\017#&\324\277\335Pi\003\374\317\251?\013~A\340k\317\322?o\306\030I\005\341\350\277&\250\256`k\t\306?\237lE$o7\353\277\371\375\3777\307\027\345?\320\022r\377\330\215\355\277\357=\337\343\364;\366?&\250\256`k\t\306?3x\201\274\335U\360\277\353R\324\373O!\372?\311U\0226\300s\363\277r\263\344WGI\364?A\r\270|\335\362\361?\302};?\331\360\333\277\027:\340\346\003\020\363\277\233\201:<\312\034\357\277\346\010\271M\336\014\004\300\331\350\207\317\"\303\345\277\005\244\251\302\347\376\353\277\360\'\352g}\342\354?\016z\277\22214\344\277\224\304\332r\261\002\365\277&\250\256`k\t\306?*#\314\177b\307\007@o\377\363\275\332B\262\277X[\314\270\273\016\337\277\324\375|\347}\250\351\277\302};?\331\360\333\277a1\342\210\005D\327\277\360\'\352g}\342\354?\247S\316\276\331\266\310\277\302};?\331\360\333\277\013~A\340k\317\322?\250B[\364\270l\343\277\364(\352\313\231V\362?\320\022r\377\330\215\355\277\014|\200\271\316\201\363?i\335\316\207\375\023\374?\347g\311\023\253\006\376?o\306\030I\005\341\350\277&\250\256`k\t\306?&\250\256`k\t\306?\254\230\321\363\264\324\005@o\306\030I\005\341\350\277\360\'\352g}\342\354?\250B[\364\270l\343\277z\230\254\313\024{\302\277\320\022r\377\330\215\355\277a1\342\210\005D\327\277,\240\252\305\366\322\330\277\364(\352\313\231V\362?\331\350\207\317\"\303\345\277\324\375|\347}\250\351\277\310u7\244d\272\276\277\324\375|\347}\250\351\277|qD\205|\327\363\277\335Pi\003\374\317\251?s\261#1\252\373\344\277\364\022\365O\"\375\350?a1\342\210\005D\327\277\335Pi\003\374\317\251?\013~A\340k\317\322?\313SQ\017#&\324\277\313SQ\017#&\324\277X[\314\270\273\016\337\277\215\354\003|\312\177\335\277o\377\363\275\332B\262\277a1\342\210\005D\327\277\247S\316\276\331\266\310\277&\250\256`k\t\306?G\340\014\302mf\365\277v\236\357?\354c\360?ih\311E\271\300\010@*#\314\177b\307\007@\223\306\233\231NP\344?\313SQ\017#&\324\277\346\223\263\013\232\271\360\277t\205L\334\006\035\\?\005\244\251\302\347\376\353\277\335\323\222\267\307\335\341\277\324\375|\347}\250\351\277\364(\352\313\231V\362?\335Pi\003\374\317\251?a1\342\210\005D\327\277\360\'\352g}\342\354?&\250\256`k\t\306?\250B[\364\270l\343\277m\310\331o\242.\370?a1\342\210\005D\327\277z\230\254\313\024{\302\277<\255\247R\364\204\002@\247S\316\276\331\266\310\277\273\226\262\244nq\356?\005\244\251\302\347\376\353\277\347g\311\023\253\006\376?\371\375\3777\307\027\345?\002\250+\020\"\232\332?\364(\352\313\231V\362?\320\022r\377\330\215\355\277o\377\363\275\332B\262\277\335\323\222\267\307\335\341\277\320\022r\377\330\215\355\277a1\342\210\005D\327\277z\230\254\313\024{\302\277a1\342\210\005D\327\277\364(\352\313\231V\362?|qD\205|\327\363\277a1\342\210\005D\327\277\212\360\205\311\004\033\354?&\250\256`k\t\306?\364(\352\313\231V\362?X[\314\270\273\016\337\277\335Pi\003\374\317\251?\313SQ\017#&\324\277o\377\363\275\332B\262\277\020v=E\367\230\305\277\t\217\264\252\214\031\350\277\346\223\263\013\232\271\360\277B\013\367U@\245\342\277\353R\324\373O!\372?\313SQ\017#&\324\277q>\337\025\003\366\000@o\377\363\275\332B\262\277\2727\242\336\241w\004@\313SQ\017#&\324\277w\234.\031O\026\341\277z\230\254\313\024{\302\277\247S\316\276\331\266\310\277\014|\200\271\316\201\363?o\306\030I\005\341\350\277v\236\357?\354c\360?B\013\367U@\245\342\277,\240\252\305\366\322\330\277\331\350\207\317\"\303\345\277a1\342\210\005D\327\277\346\010\271M\336\014\004\300\364(\352\313\231V\362?\367\016s\002\350a\332\277\346\010\271M\336\014\004\300:5\341\205\366o\352\277v\236\357?\354c\360?a1\342\210\005D\327\277mS\324-^\333\004@o\377\363\275\332B\262\277&\250\256`k\t\306?\005\244\251\302\347\376\353\277K\313\027\252\022\201\361\277\247S\316\276\331\266\310\277\335Pi\003\374\317\251?\331\350\207\317\"\303\345\277q>\337\025\003\366\000@\331\350\207\317\"\303\345\277m\310\331o\242.\370?\331\350\207\317\"\303\345\277)\244,\0231n\347?o\377\363\275\332B\262\277\313SQ\017#&\324\277\002\250+\020\"\232\332?\335Pi\003\374\317\251?&\250\256`k\t\306?\005\244\251\302\347\376\353\277\313SQ\017#&\324\277\346\223\263\013\232\271\360\277\020v=E\367\230\305\277*#\314\177b\307\007@\346\010\271M\336\014\004\300\364(\352\313\231V\362?r\263\344WGI\364?\367\016s\002\350a\332\2775v\300\225@\010\321\277\353R\324\373O!\372?\233\201:<\312\034\357\277&\250\256`k\t\306?\250B[\364\270l\343\277=1_8\274\324\313\277\237lE$o7\353\277:5\341\205\366o\352\277\324\375|\347}\250\351\277\346\010\271M\336\014\004\300"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "$\310\266\3365\217\346\277iK\310\331\311o\364?\265m\352\3148\247\356\277r\316\300u\037\252\351?`\243\177O\350l\333\277\244<\373\370\327\215\372?ool\255\326\005\352\277\336\024\350\276\037\000\337?\370\216\325\374\304r\367?\243N\263;\307\206\362\277&\017\276\032\301T\365\277\264\246\205\033\\*\257?\260\304\262\035\372\321\357\277ff\335\300\232\304\377?\374Q\356X\0329\235\277\351\037Z\211\275\337\350?\204\311q+\207$\361?\351\302\350\236\326\331\370\2770\353u5\221M\361\277\372\252\001\251\241\204\304\277J\335\363\354\231\025\340\277W\013\363\3058\316\355?\332\302\226X\245E\362?\265m\352\3148\247\356\277\253\363\236\225~\245\247\277\373|\'b\201t\352?\300\244:\2349\002\366\277\230\025\2126\020\210\326\277\361\310\233\340\247\257\362?\t\317\245<\000\227\000@Yz&\233\272\307\340?\363\024X\375S\204\366\277\211|\t\364[\035\337\277\267sy?G\260\002@\222\304\016\221\227\251\342?\363-\236V\0320\330\277\243N\263;\307\206\362\277\037K]4Z5\365?\357Yh\013&\266\377?\226\372`\377\347=\345\277\3200\270|\037\203\352\277\nI\024\300o\r\331?\242\006\26323\364\322?u\216[\240\302\214\352\277\313\207\200\315\340\255\353\277\224\316xR\331\307\334\277\373\312\2545x\025\003@\256\026\332\335\361\342\361\277>-\020/\201\235\346?0\017\037\035\242\344\275\277\354\"@\334\323E\324\277\022\210\004\327\253\336\267\277\366q\323\217\346\204\361?\320\272\0009r\321\350\277\314s\357T;\021\357\277EU`\227:\236\000@\013\226\311\251$\257\335\277[W\334\226\227\216\264\277t\210\243J\355\265\311?\371\275\217\254\222Y\365\277\370\216\325\374\304r\367?N\262\377\370\217k\341?\010\031z\247\364O\347\277<\234/\264\253\241\323?\235\352\237\352\261\330\362\277\r\364=\t\300|\311\2773\333\240\320\003\363\350?\3200\270|\037\203\352\277\313\"\210\377\031(\341?\333\361P\010s,\360\277\200\351TW\324~\276\277\265\010\362\376q!\344?\003\314\260m\350\270\314?\367]B\027A\350\364?\206\237v\004\206G\363\277\360&\006\230\227\202\343\277Y7\333rGD\326?\261\275.\257\316\031\341\277%\201\271JV\304\322\277\217e\272\310N\005\343\277\356A\033\177h\327\356\277\001\266_#\350n\310\277\334\016SuQ\032\366\277i\006\244{\240H\365?\032\026\004\223\022n\363\277\263\330W\346\366c\322\277\204+\216N\343>\353?\006w\332\2668(\335\277*q\356\215td\345\277\251\240\016J\355;\372?\353}\316\350X\255\344\277\222\232\t\302\352\321\371?\351\307\235\177\367\350\335\2776\367\251p\331\023\316?\345^\337\365l&\344\277K\365@yW\364\360?\032\316\003\212~\333\323?\024\367\024\240&\347\362\277\007\346\r\214\272!\320\277;**\334j7\313?\336\312\323\022$3\227\2771\034\t\033\025\330\363\277/\001\340\343\354\215\362?|#\002\327[\305\354\277\300_\026>\020\333\366\277\323\217\014Eh\'\352?\242\330\373\367\031\325\360\277\003>\266E)#\325?\375\306\nIw\245\351\277\3200\270|\037\203\352\277\343\217\213?L\247\263\277hx\237\2535\270\342\277\243\177F!K\021\365\277\333\336\225P\317k\314?C{\257)\217\020\372?\017$\330!;:\353\277\322\243\235\275\r\304\346?\222NWM\352\367\340?\177e^\332qv\361?NZC\357\311t\326\2772\222\300^\302\211\365\277\005\343\'9\244\273\344?\231\276\255\225\367g\357\277\2770\\\216B\364\370?\333g\010L \336\361\277!#;C\017\374\373?\322K\341\263G\315\333\277\326\003\365\372\n0\362\277\273\235\2305\013Z\346?\334\016SuQ\032\366\2772\224\231\224x-\372?\243\201\037W\001\265\371?\014\326\020\002\005\205t\277\3476\275\004\"\355\352\277^<\244\243\277H\361\277^\022\237\324\022q\350\277\013g\017\372V\310\357\277M\020j\260\177>\362\277\225\210[\'\247\323\354?w\213\211\235\003\034\345?\251\343Yr`\277\364\277\\\264*uw\243\354?>\205\3148G\224\301?TL~\034Q\244\260\277v\004\023\344o>\354\277\032\026\004\223\022n\363\277\024n\000\036\216\374\230?\\:\301\305]\252\341\277B\352\330Ve\017\342?\213\212\366f\203\330\320?\3767\352\237\374V\276?D\364B\030\247-\334\277p[\33341i\355\277\200Q\315a\314\331\364?\333\"\344\355\366\266\362\277\320\346\336=\325L\366?\265\231\310\321\233\"\374?\024\371\355\325\334\212\367?\342\215\205U\343\027\354\277\374Q\356X\0329\235\277\304\246\216;\335|\201\277\272\314H=-F\371?\255X\"\221\260\236\320?\037\0069\3260\016\366?\"&\027\356yg\334\277\024\377\233\203\006g\315\277MU\216\016\251e\361\277%\201\271JV\304\322\277pV\277:zx\207?y\331\036\360e\224\355?e\223\264\222\006\r\356\277M\313ERV\027\363\277>\267X\353\323\353\344?\206\344\232b\257n\362\277\322\222\336G\'\230\357\277\260_\272O3L\345?\333\254,\252I\005\361\277h\244}\260\2303\360?\000\265\303\307\311\210\215\277\321Aw\362\005\257\341?\361D\001\322~=\312\277y\325l\204\371L\344\277U\"VA\235\333\357\277\215\303\032\330\222\335\330\277zK$\310\246\376\345\277C\247\215.\362\213\327?\322\222\336G\'\230\357\277\317\322C\035\204\265\356?\205\265\340\262\341\207\364?\263\225\014\276\203\340\347\277\234\273\345:\344\361\364?\305\224o\337W\242\370?\022\026\326\033\244\246\002@#\340\371\302Gs\354?\247\341v\224\376 \345\277\313la>d^\365\277\266\016\252TG\370\304\277\243N\263;\307\206\362\277\350\",\214|P\356\277\277B\024\3211\355\360\277\332\302\226X\245E\362?\224Y\241w\331\354\336?]\3372\271\330B\321\277\307lM\356\014i\377?)\200\247\031\362\000\265?&\240\224\355\352U\355\277\tv\353\221\333U\367?|\231\271\032\tw\356\277~\010\355\357\212p\341\277{\355\276\344\014\251\002@a\217\356\326B\320\336\277\226\234\366G\370j\364?j5^+n/\363\277|\200s\301B\313\374?\241x\256b\310c\360? \246\365\350\212\227\340?\247\345(\000kh\356?\333\361P\010s,\360\277\374Q\356X\0329\235\277\265m\352\3148\247\356\277\263\037Uz\326.\346\277\312\021\311\2113\374\351\277\354i=p\263\020\350\277o\364\334|\001T\273?\t\240\360`\210-\340?\206)\277\300\330\225\361\277\340\021\026\274`\217\311?\002RG\276\316\277\321?\224\234\354\237Lp\351?\364\321\014\325\340\000\374?k<\354AE\342\354\277#\340\371\302Gs\354?\030M\274\003\324R\244?\377\n6\332\227\377\327?Bcb\235\3211\351\277\264\013\304\0011\222\351\277\244\365\375d\370\302\366\277B\331\031\341~\343\352\277\312\226a9\273\270\000@\252\016?\252\272m\301?j\255\356\244\321\204\371?\377k|<\362=\331\277\253\0025\025\365P\377?H;T\374\335\355\325\277\346\371\240\017\230\276\251?b\001\364\256\203:\307\277\332\014p\227\357{\346\277A\324d\000^\324\365?\206\344\232b\257n\362\277\3715 &\366\256\373?\231\001\371\275j\353\331\277\004\237\374\247\203a\326\277\306T\000bO\212\356\277\024\306\201\272\242\\\360\277z\246\274|\327`\361\277\265\231\310\321\233\"\374?\010\243\302cG\236\345\277\273\242p\"3Z\263\277\202Xe O\207\371\277MWgD_\t\366?\322\222\336G\'\230\357\277H\232\236\034{\227\372?|R\274\206)\254\332\277?`|J\273\313\335?\'\026L1\230\007\357\2772\222\300^\302\211\365\277\353\363\205,\006_\346\277\307\230+\363o\344\334?CO\321$,\225\354\277,\353a\3459X\373?J\335\363\354\231\025\340\277\257sK\310\330\350\341?\200O\364+\0266\360\277 \246\365\350\212\227\340?\330\t\212D\331\025\333?t\372\250\". \322?/\320L\376h\003\360?\264\222:\273\304o\342?{fM\377\316H\327\277jz\202\211\227V\362\277\336\312\323\022$3\227\277\350\",\214|P\356\277X\254\262MG\037\324\277\244\367\326\232\256f\373?im\230\213$c\274\2770\355NkG\361\365?\364\214\350v\267\331\374?\325\225\304\232=\376\312\277(E\006\341e\356\334\277\333i\341\201\326\201\366?\013g\017\372V\310\357\277\315\267\032\346[k\335?\243\t\217\335\235_\363\277X}\370\235y8\346\277\370\214\374\306\016\317\362\277\313\3757\021\216_\355\277D;@\254\206\370\357\277\371\275\217\254\222Y\365\277"
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "U\264\273<a\271\355\277=T\315F\240\233\364\277VD\241\274X\376\324?U\372(\214kI\350?P\030\265\037}\017\367?;\373\216O\210\010\364\277+?\312Q^\326\237\277=\367\203n\245\343\361?U\264\273<a\271\355\277Hf81M\351\365?h\366\035\245\314\032\377?VD\241\274X\376\324?B:L\224q\372\347\277B:L\224q\372\347\277<\214\332\206$\371\330\277U\372(\214kI\350?3\227\225r(\274\361\277VD\241\274X\376\324?K26\322\253\260\343?+?\312Q^\326\237\277P\226/\257\013\375\345?\265\002\362\265{|\001\300PP\302_\001m\353\277F\340\247\337\370\261\322?+?\312Q^\326\237\277F\021\005\033\030{\367\277F\340\247\337\370\261\322?d\240\204\327\362\000\303?3rY\332\261a\343\277:E\007\200u\275\360?\237 >\307\346\236\263?C\002?T\355\234\363?PP\302_\001m\353\277F\021\005\033\030{\367\277g\250\232\231\270J\327?.0\367k\212\366\312\277d\240\204\327\362\000\303?U\264\273<a\271\355\277U\264\273<a\271\355\2778\370\351%J\217\317\277+?\312Q^\326\237\277+?\312Q^\326\237\277B:L\224q\372\347\277+?\312Q^\326\237\2773\227\225r(\274\361\277d\240\204\327\362\000\303?0\300\334\353\201;\342\277F\340\247\337\370\261\322?-\214\332\214\340\002\360\277j\302\033F+\342\354?Wf8+\221\337\356\277K26\322\253\260\343?G\344\262\300\333\326\344?:E\007\200u\275\360?2\304\347\314d`\324\277O\316<\357\217Z\372\277x0jKr2\314?d\240\204\327\362\000\303?@\210\317\245A\324\346\277_9\346\320T;\374?-\214\332\214\340\002\360\277h\366\035\245\314\032\377?qp\215Sx\343\333?Z\340\247\331<\250\373?AP\302e\275v\362?A\360\323c\204E\333\277b\020\237W\373\273\353?\032\240\021\370\n\305\301\277PP\302_\001m\353\277F\264\273B\035\303\364?+?\312Q^\326\237\277=T\315F\240\233\364\277P\030\265\037}\017\367?=\326R\267\021\256\345\277qp\215Sx\343\333?VD\241\274X\376\324?gt\2304[\010\356?!`\356\357\004\024\322\277Hf81M\351\365?+?\312Q^\326\237\2778\370\351%J\217\317\277B:L\224q\372\347\277P\226/\257\013\375\345?U\264\273<a\271\355\277V\270\306\035D\336\337\2772>W{\020)\361\277F\021\005\033\030{\367\2770\300\334\353\201;\342\277L\277v(e|\366?U\264\273<a\271\355\2773\227\225r(\274\361\2771$\326\313\277\014\000\3008\370\351%J\217\317\277=T\315F\240\233\364\277.0\367k\212\366\312\277.0\367k\212\366\312\277\337\037X\010\027\'\261\277\272 \261\246\316\332\244?\237 >\307\346\236\263?\272 \261\246\316\332\244?Q#p\005\305\310\370?A\360\323c\204E\333\277PP\302_\001m\353\277<\214\332\206$\371\330\277j\324\2060\330/\336?O\316<\357\217Z\372\277\263\260#;f\320\274?<_\210/\306\331\001@=\034\300\006\034>\340?gt\2304[\010\356?d\240\204\327\362\000\303?0\300\334\353\201;\342\2775$\326\310\341\207\344\277L\277v(e|\366?:\341\r\2407\354\002\3000\300\334\353\201;\342\277h\366\035\245\314\032\377?>\021\005\036\366\377\002@:E\007\200u\275\360?B:L\224q\372\347\277:\242PXpu\363\277F\340\247\337\370\261\322?g\250\232\231\270J\327?8\370\351%J\217\317\277F\264\273B\035\303\364?B:L\224q\372\347\277-\214\332\214\340\002\360\277C\002?T\355\234\363?1$\326\313\277\014\000\300G\344\262\300\333\326\344?8\370\351%J\217\317\277<\214\332\206$\371\330\277\237 >\307\346\236\263?\313S\032\345\021\274\006@=\034\300\006\034>\340?\237 >\307\346\236\263?<\214\332\206$\371\330\277d\240\204\327\362\000\303?PP\302_\001m\353\277Z\325\354\363\364\356\371?L\277v(e|\366?C\002?T\355\234\363?1$\326\313\277\014\000\300d\240\204\327\362\000\303?VD\241\274X\376\324?0\300\334\353\201;\342\277gt\2304[\010\356?$h\004\262\312]\306\277X\213t\303\007:\375\277]\254\245z\233o\351?`\014\224v\030\227\331?H\303\201\tH\241\370\277\237 >\307\346\236\263?0\300\334\353\201;\342\277\032\240\021\370\n\305\301\277B:L\224q\372\347\277F\021\005\033\030{\367\277Nu\376\367w\307\371\277VD\241\274X\376\324?F\340\247\337\370\261\322?B:L\224q\372\347\277\276\277)\212\363[\004\300W\226/\254-x\n@0\300\334\353\201;\342\277:E\007\200u\275\360?+?\312Q^\326\237\277x0jKr2\314?\337\037X\010\027\'\261\277L\277v(e|\366?0\300\334\353\201;\342\277d\240\204\327\362\000\303?_9\346\320T;\374?C\002?T\355\234\363?=\034\300\006\034>\340?V=\361\264\025\345\t@F\264\273B\035\303\364?<\214\332\206$\371\330\277\032\240\021\370\n\305\301\277=\034\300\006\034>\340?+?\312Q^\326\237\277\272 \261\246\316\332\244?<\214\332\206$\371\330\2770\300\334\353\201;\342\277=\034\300\006\034>\340?Wf8+\221\337\356\277.0\367k\212\366\312\277<\214\332\206$\371\330\277C\002?T\355\234\363?C\002?T\355\234\363?\314\254X\334)O\007@U\264\273<a\271\355\277\265\002\362\265{|\001\300O\316<\357\217Z\372\277E\354\310\202\241 \351\277L\277v(e|\366?C\002?T\355\234\363?\263\260#;f\320\274?F\340\247\337\370\261\322?.0\367k\212\366\312\277>\236Ew\215P\361?U\264\273<a\271\355\277\237 >\307\346\236\263?d\240\204\327\362\000\303?d\240\204\327\362\000\303?.0\367k\212\366\312\277.\016`\375Q\025\341\277=T\315F\240\233\364\277<\214\332\206$\371\330\277<\214\332\206$\371\330\277F\021\005\033\030{\367\277V\270\306\035D\336\337\277FT\315@\344\221\335\277C\002?T\355\234\363?3\227\225r(\274\361\277\337\037X\010\027\'\261\277$h\004\262\312]\306\2773\227\225r(\274\361\277Z^\"i\313\225\352?d\240\204\327\362\000\303?!`\356\357\004\024\322\277a\353b\277\204a\375?C\002?T\355\234\363?B:L\224q\372\347\277F\316<\365Kd\341?O\316<\357\217Z\372\277>\021\005\036\366\377\002@<\214\332\206$\371\330\277L\034\300\000`4\371\277x0jKr2\314?B:L\224q\372\347\277\363\257=|\226X\272\277C\002?T\355\234\363?Z\325\354\363\364\356\371?+?\312Q^\326\237\277+?\312Q^\326\237\277=\034\300\006\034>\340?\205hw\221\262\231\307?U\372(\214kI\350?=T\315F\240\233\364\277XH\254\235;#\347?:\242PXpu\363\277U\264\273<a\271\355\277O\316<\357\217Z\372\277VD\241\274X\376\324?XH\254\235;#\347?<\214\332\206$\371\330\277.0\367k\212\366\312\277U\264\273<a\271\355\2778\370\351%J\217\317\2770\300\334\353\201;\342\277>\236Ew\215P\361?P\226/\257\013\375\345?+?\312Q^\326\237\277VD\241\274X\376\324?C\002?T\355\234\363?=T\315F\240\233\364\277d\240\204\327\362\000\303?FT\315@\344\221\335\277b\020\237W\373\273\353?=\326R\267\021\256\345\277<\214\332\206$\371\330\277B:L\224q\372\347\277!`\356\357\004\024\322\277+?\312Q^\326\237\277b\020\237W\373\273\353?>\236Ew\215P\361?P\226/\257\013\375\345?<\214\332\206$\371\330\277A\360\323c\204E\333\2773\227\225r(\274\361\277=\034\300\006\034>\340?E\354\310\202\241 \351\277+?\312Q^\326\237\277\237 >\307\346\236\263?+?\312Q^\326\237\277B\200\271\343{\212\342?`\014\224v\030\227\331?d\240\204\327\362\000\303?0\300\334\353\201;\342\277x0jKr2\314?K26\322\253\260\343?\277\344e\"j\266\002@B:L\224q\372\347\2771$\326\313\277\014\000\300=\034\300\006\034>\340?B:L\224q\372\347\277B:L\224q\372\347\277\222\0040\367}\276s?<\214\332\206$\371\330\277GjC\0220\016\370\2772\304\347\314d`\324\277g\250\232\231\270J\327?<\214\332\206$\371\330\277VD\241\274X\376\324?XH\254\235;#\347?b\020\237W\373\273\353?+?\312Q^\326\237\277K26\322\253\260\343?"
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\313\257\352a\317f\373?\360gnf\362\247\243?\334\016\341Z4\026\343?\360gnf\362\247\243?\313\257\352a\317f\373?\360gnf\362\247\243?\036\265F\241u>\361\277\235\233\255\307\364x\362?\360gnf\362\247\243?\334\016\341Z4\026\343?\336A\023\0166\241\340\277\rVP\250\020\217\351\277\rVP\250\020\217\351\277\276\266X\317m\315\316\277\276\266X\317m\315\316\277[\365G\201\263P\324?[\365G\201\263P\324?\336A\023\0166\241\340\277\264%\314\024\342\357\366?L\311\203;P,\372\277\235\233\255\307\364x\362?L\311\203;P,\372\277\360gnf\362\247\243?\360gnf\362\247\243?\360gnf\362\247\243?\036\265F\241u>\361\277\334\016\341Z4\026\343?\013#\036\365\016\004\354?\360gnf\362\247\243?L\311\203;P,\372\277\264%\314\024\342\357\366?5?e\356b\265\365\277\013#\036\365\016\004\354?5?e\356b\265\365\277\264%\314\024\342\357\366?L\311\203;P,\372\277\264%\314\024\342\357\366?5?e\356b\265\365\277\rVP\250\020\217\351\277\334\016\341Z4\026\343?\rVP\250\020\217\351\2775?e\356b\265\365\277\276\266X\317m\315\316\2775?e\356b\265\365\277L\311\203;P,\372\277L\311\203;P,\372\277\rVP\250\020\217\351\277\235\233\255\307\364x\362?\334\016\341Z4\026\343?\235\233\255\307\364x\362?\013#\036\365\016\004\354?\013#\036\365\016\004\354?\013#\036\365\016\004\354?\rVP\250\020\217\351\277\235\233\255\307\364x\362?\rVP\250\020\217\351\277\313\257\352a\317f\373?\336A\023\0166\241\340\277\334\016\341Z4\026\343?L\311\203;P,\372\277\360gnf\362\247\243?\276\266X\317m\315\316\277\264%\314\024\342\357\366?\264%\314\024\342\357\366?\235\233\255\307\364x\362?\235\233\255\307\364x\362?\336A\023\0166\241\340\277\235\233\255\307\364x\362?\334\016\341Z4\026\343?\235\233\255\307\364x\362?\rVP\250\020\217\351\277L\311\203;P,\372\277\264%\314\024\342\357\366?\334\016\341Z4\026\343?[\365G\201\263P\324?\336A\023\0166\241\340\277\013#\036\365\016\004\354?\334\016\341Z4\026\343?\313\257\352a\317f\373?\360gnf\362\247\243?\013#\036\365\016\004\354?\rVP\250\020\217\351\277\276\266X\317m\315\316\277\rVP\250\020\217\351\277\360gnf\362\247\243?\264%\314\024\342\357\366?L\311\203;P,\372\277\rVP\250\020\217\351\277\rVP\250\020\217\351\277\rVP\250\020\217\351\277\235\233\255\307\364x\362?L\311\203;P,\372\277\360gnf\362\247\243?\276\266X\317m\315\316\277\235\233\255\307\364x\362?\360gnf\362\247\243?\360gnf\362\247\243?\313\257\352a\317f\373?[\365G\201\263P\324?\360gnf\362\247\243?\235\233\255\307\364x\362?\013#\036\365\016\004\354?\013#\036\365\016\004\354?\313\257\352a\317f\373?\264%\314\024\342\357\366?\rVP\250\020\217\351\277[\365G\201\263P\324?\235\233\255\307\364x\362?\036\265F\241u>\361\277[\365G\201\263P\324?\rVP\250\020\217\351\277\rVP\250\020\217\351\277\235\233\255\307\364x\362?\276\266X\317m\315\316\277L\311\203;P,\372\277\336A\023\0166\241\340\277\360gnf\362\247\243?\013#\036\365\016\004\354?\276\266X\317m\315\316\277\276\266X\317m\315\316\277\360gnf\362\247\243?[\365G\201\263P\324?\334\016\341Z4\026\343?[\365G\201\263P\324?\013#\036\365\016\004\354?\036\265F\241u>\361\277[\365G\201\263P\324?\336A\023\0166\241\340\277L\311\203;P,\372\277\360gnf\362\247\243?\013#\036\365\016\004\354?[\365G\201\263P\324?\334\016\341Z4\026\343?\036\265F\241u>\361\277[\365G\201\263P\324?\264%\314\024\342\357\366?\336A\023\0166\241\340\277\336A\023\0166\241\340\277\334\016\341Z4\026\343?\013#\036\365\016\004\354?\rVP\250\020\217\351\277\276\266X\317m\315\316\277L\311\203;P,\372\277\276\266X\317m\315\316\277\336A\023\0166\241\340\277\276\266X\317m\315\316\277\013#\036\365\016\004\354?\235\233\255\307\364x\362?L\311\203;P,\372\277\360gnf\362\247\243?\334\016\341Z4\026\343?\013#\036\365\016\004\354?\235\233\255\307\364x\362?\036\265F\241u>\361\277\013#\036\365\016\004\354?5?e\356b\265\365\2775?e\356b\265\365\277[\365G\201\263P\324?\276\266X\317m\315\316\277\313\257\352a\317f\373?5?e\356b\265\365\277L\311\203;P,\372\277\013#\036\365\016\004\354?\336A\023\0166\241\340\277\276\266X\317m\315\316\277L\311\203;P,\372\277\264%\314\024\342\357\366?\334\016\341Z4\026\343?\036\265F\241u>\361\277\360gnf\362\247\243?\276\266X\317m\315\316\2775?e\356b\265\365\277[\365G\201\263P\324?\360gnf\362\247\243?\313\257\352a\317f\373?\334\016\341Z4\026\343?5?e\356b\265\365\277\013#\036\365\016\004\354?\276\266X\317m\315\316\2775?e\356b\265\365\277\334\016\341Z4\026\343?L\311\203;P,\372\2775?e\356b\265\365\277\276\266X\317m\315\316\277\264%\314\024\342\357\366?5?e\356b\265\365\277L\311\203;P,\372\277\276\266X\317m\315\316\277[\365G\201\263P\324?\235\233\255\307\364x\362?\rVP\250\020\217\351\277\rVP\250\020\217\351\277\rVP\250\020\217\351\277\013#\036\365\016\004\354?\036\265F\241u>\361\2775?e\356b\265\365\277\334\016\341Z4\026\343?[\365G\201\263P\324?\036\265F\241u>\361\277\334\016\341Z4\026\343?\013#\036\365\016\004\354?\334\016\341Z4\026\343?[\365G\201\263P\324?\336A\023\0166\241\340\277\276\266X\317m\315\316\277[\365G\201\263P\324?5?e\356b\265\365\277\313\257\352a\317f\373?\036\265F\241u>\361\277\rVP\250\020\217\351\277\334\016\341Z4\026\343?\013#\036\365\016\004\354?\336A\023\0166\241\340\277\rVP\250\020\217\351\277\013#\036\365\016\004\354?\334\016\341Z4\026\343?\rVP\250\020\217\351\277\235\233\255\307\364x\362?\rVP\250\020\217\351\277[\365G\201\263P\324?\264%\314\024\342\357\366?\rVP\250\020\217\351\277\036\265F\241u>\361\277\264%\314\024\342\357\366?\rVP\250\020\217\351\277\360gnf\362\247\243?5?e\356b\265\365\277\334\016\341Z4\026\343?\360gnf\362\247\243?\336A\023\0166\241\340\277\360gnf\362\247\243?\264%\314\024\342\357\366?\235\233\255\307\364x\362?5?e\356b\265\365\277[\365G\201\263P\324?\235\233\255\307\364x\362?\264%\314\024\342\357\366?\360gnf\362\247\243?5?e\356b\265\365\277\360gnf\362\247\243?[\365G\201\263P\324?5?e\356b\265\365\277\036\265F\241u>\361\277\235\233\255\307\364x\362?\360gnf\362\247\243?[\365G\201\263P\324?L\311\203;P,\372\277\036\265F\241u>\361\277\334\016\341Z4\026\343?\276\266X\317m\315\316\277\313\257\352a\317f\373?L\311\203;P,\372\277\rVP\250\020\217\351\277\036\265F\241u>\361\2775?e\356b\265\365\277\rVP\250\020\217\351\277\036\265F\241u>\361\277\235\233\255\307\364x\362?5?e\356b\265\365\277[\365G\201\263P\324?5?e\356b\265\365\277L\311\203;P,\372\277\264%\314\024\342\357\366?\334\016\341Z4\026\343?\235\233\255\307\364x\362?[\365G\201\263P\324?L\311\203;P,\372\277\360gnf\362\247\243?\264%\314\024\342\357\366?\036\265F\241u>\361\277\336A\023\0166\241\340\277\334\016\341Z4\026\343?\336A\023\0166\241\340\277\334\016\341Z4\026\343?5?e\356b\265\365\277\334\016\341Z4\026\343?\360gnf\362\247\243?\276\266X\317m\315\316\277\rVP\250\020\217\351\277\313\257\352a\317f\373?\313\257\352a\317f\373?\360gnf\362\247\243?\276\266X\317m\315\316\277L\311\203;P,\372\277\336A\023\0166\241\340\277\036\265F\241u>\361\277\036\265F\241u>\361\277\313\257\352a\317f\373?\313\257\352a\317f\373?[\365G\201\263P\324?\313\257\352a\317f\373?\013#\036\365\016\004\354?[\365G\201\263P\324?\rVP\250\020\217\351\277\313\257\352a\317f\373?\036\265F\241u>\361\277\235\233\255\307\364x\362?\235\233\255\307\364x\362?"
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\017\014^\235\014<\340?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\017\014^\235\014<\340?\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\017\014^\235\014<\340?\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\327\253\262\365\332\361\373?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\017\014^\235\014<\340?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\017\014^\235\014<\340?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\017\014^\235\014<\340?\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\017\014^\235\014<\340?\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\017\014^\235\014<\340?\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\017\014^\235\014<\340?\017\014^\235\014<\340?\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\017\014^\235\014<\340?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\017\014^\235\014<\340?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\017\014^\235\014<\340?\017\014^\235\014<\340?\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\017\014^\235\014<\340?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\220?\251\260\234k\347\277\017\014^\235\014<\340?\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\327\253\262\365\332\361\373?\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\220?\251\260\234k\347\277\017\014^\235\014<\340?\327\253\262\365\332\361\373?\327\253\262\365\332\361\373?\017\014^\235\014<\340?\220?\251\260\234k\347\277\017\014^\235\014<\340?"
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\000\000\000\000\000\000B@\000\000\000\000\000\000*@\000\000\000\000\000\000>@\000\000\000\000\000\0004@\000\000\000\000\000\000<@\000\000\000\000\000\2000@\000\000\000\000\000\0008@\232\231\231\231\231\0313@\000\000\000\000\000\2001@ffffff@@\000\000\000\000\000\000@@\000\000\000\000\000\0002@\000\000\000\000\000\0002@\000\000\000\000\000\000,@\000\000\000\000\000\0006@\000\000\000\000\000\0003@\000\000\000\000\000\2001@\000\000\000\000\000\000?@\232\231\231\231\231\331B@\000\000\000\000\000\0006@\315\314\314\314\314L?@\000\000\000\000\000\000.@\000\000\000\000\000\000*@\000\000\000\000\000\000<@\000\000\000\000\000\0003@\000\000\000\000\000\0001@\315\314\314\314\314\014B@ffffff<@\000\000\000\000\000\000/@\000\000\000\000\000\000\"@ffffff6@\000\000\000\000\000\000?@\000\000\000\000\000\300@@\000\000\000\000\000\000(@\232\231\231\231\231\2311@\000\000\000\000\000\0005@\315\314\314\314\314\014A@\000\000\000\000\000\000,@\000\000\000\000\000\000*@fffff\3467@\000\000\000\000\000\000:@\000\000\000\000\000\0003@\000\000\000\000\000\0004@\000\000\000\000\000\000<@\000\000\000\000\000\000:@\000\000\000\000\000\0005@\000\000\000\000\000\000&@\232\231\231\231\231\231B@3333334@ffffff:@\315\314\314\314\314\314:@\315\314\314\314\314L6@\000\000\000\000\000\0007@\000\000\000\000\000\0003@\000\000\000\000\000\300D@\000\000\000\000\000\000*@\000\000\000\000\000\000?@\000\000\000\000\000\0003@\000\000\000\000\000\0001@\000\000\000\000\000\000:@\000\000\000\000\000\000-@\000\000\000\000\000\000.@333333@@\232\231\231\231\231\031<@\315\314\314\314\314\014C@fffff\346;@\000\000\000\000\000\0000@\232\231\231\231\231\031@@3333333@ffffffD@\000\000\000\000\000\0003@\000\000\000\000\000\0002@33333\263>@\000\000\000\000\000\2001@\000\000\000\000\000\300@@\000\000\000\000\000\000:@3333334@\232\231\231\231\231\0315@\000\000\000\000\000\000?@\000\000\000\000\000\000<@\000\000\000\000\000@A@\000\000\000\000\000\0004@\000\000\000\000\000\200@@\000\000\000\000\000\000*@\000\000\000\000\000\000=@\000\000\000\000\000\2007@\000\000\000\000\000\000.@\000\000\000\000\000\0004@\000\000\000\000\000\0005@\000\000\000\000\000\000*@33333\2637@\000\000\000\000\000\000.@\000\000\000\000\000\0009@\000\000\000\000\000\000*@\000\000\000\000\000\200B@\000\000\000\000\000\000*@\000\000\000\000\000\0006@\000\000\000\000\000\000@@\000\000\000\000\000\2009@\000\000\000\000\000\0004@333333B@\232\231\231\231\231\331A@\000\000\000\000\000\2000@\000\000\000\000\000\000B@\315\314\314\314\314\214C@\000\000\000\000\000\000&@\000\000\000\000\000\300@@\000\000\000\000\000\000>@\000\000\000\000\000\000<@\000\000\000\000\000\000:@\000\000\000\000\000\0007@\000\000\000\000\000\0005@\315\314\314\314\314LF@\000\000\000\000\000\000.@\000\000\000\000\000\000,@\000\000\000\000\000\000:@\000\000\000\000\000\0002@fffff\3467@\000\000\000\000\000\0000@\000\000\000\000\000\0009@\000\000\000\000\000\200=@\000\000\000\000\000\2001@\000\000\000\000\000\200=@\000\000\000\000\000\000.@\315\314\314\314\314\314?@\000\000\000\000\000\000(@\000\000\000\000\000\2005@\000\000\000\000\000\000@@\000\000\000\000\000\000.@\000\000\000\000\000\200@@fffff\3460@\000\000\000\000\000\0000@3333334@\000\000\000\000\000\0007@\000\000\000\000\000\200>@\000\000\000\000\000@A@\000\000\000\000\000\000<@\000\000\000\000\000\000?@ffffff3@ffffff9@\000\000\000\000\000\000=@\000\000\000\000\000\000.@\000\000\000\000\000\000,@\000\000\000\000\000\0004@\000\000\000\000\000\000=@\000\000\000\000\000\000=@\315\314\314\314\314\3143@\000\000\000\000\000\200A@\000\000\000\000\000\0001@\000\000\000\000\000\2001@\315\314\314\314\314\3144@\315\314\314\314\314\314<@ffffffffff\346=@\000\000\000\000\000\0004@\000\000\000\000\000\0003@3333334@\000\000\000\000\000\000.@\000\000\000\000\000\000=@\000\000\000\000\000\0002@\232\231\231\231\231\0312@\000\000\000\000\000\2002@\000\000\000\000\000\000,@\000\000\000\000\000\000;@\232\231\231\231\231\231:@\315\314\314\314\314L8@\000\000\000\000\000\0002@\000\000\000\000\000\2009@333333@@\315\314\314\314\314\214A@\000\000\000\000\000\000:@\000\000\000\000\000\000*@\000\000\000\000\000\2006@\000\000\000\000\000\000/@\000\000\000\000\000\0003@\000\000\000\000\000\000&@\000\000\000\000\000\000<@\000\000\000\000\000\0008@\000\000\000\000\000\0006@\000\000\000\000\000\0008@\000\000\000\000\000\000,@\000\000\000\000\000\200?@\000\000\000\000\000\000.@\000\000\000\000\000\000<@\000\000\000\000\000\0009@\000\000\000\000\000\0008@\000\000\000\000\000\000;@\000\000\000\000\000\0009@\000\000\000\000\000\000*@\000\000\000\000\000\0006@\232\231\231\231\231\2317@\000\000\000\000\000\200A@\000\000\000\000\000\000/@\000\000\000\000\000\000;@\000\000\000\000\000\000&@33333s@@fffff\3463@fffff\346@@\000\000\000\000\000\000B@\000\000\000\000\000\0009@\000\000\000\000\000\0006@\232\231\231\231\231\331@@\000\000\000\000\000\000*@\000\000\000\000\000\0009@33333\2631@\000\000\000\000\000\0008@3333330@\000\000\000\000\000\0001@ffffff3@\000\000\000\000\000\2000@\000\000\000\000\000\0002@\000\000\000\000\000\0008@\000\000\000\000\000\000C@\000\000\000\000\000\000;@\000\000\000\000\000\2008@\000\000\000\000\000\0008@\000\000\000\000\000\000,@\000\000\000\000\000\0005@\000\000\000\000\000\000.@\000\000\000\000\000\000*@\000\000\000\000\000\000;@\000\000\000\000\000\000:@\000\000\000\000\000\000/@\000\000\000\000\000\000C@\232\231\231\231\231\2314@\000\000\000\000\000\000=@\000\000\000\000\000\0006@\000\000\000\000\000\000?@\000\000\000\000\000\000:@\315\314\314\314\314\014@@33333sD@"
      }
    }
  }
}
node {
  name: "IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cond/Switch"
  op: "Switch"
  input: "IsVariableInitialized"
  input: "IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/switch_t"
  op: "Identity"
  input: "cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/switch_f"
  op: "Identity"
  input: "cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/pred_id"
  op: "Identity"
  input: "IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/read"
  op: "Identity"
  input: "cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/Merge"
  op: "Merge"
  input: "cond/Switch_1"
  input: "cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "cond/Merge"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/acceleration/ToFloat"
  op: "Cast"
  input: "Const_4"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/cylinders/ToFloat"
  op: "Cast"
  input: "Const"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/displacement/ToFloat"
  op: "Cast"
  input: "Const_1"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/horsepower/ToFloat"
  op: "Cast"
  input: "Const_2"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/model_year/ToFloat"
  op: "Cast"
  input: "Const_5"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/origin/ToFloat"
  op: "Cast"
  input: "Const_6"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/weight/ToFloat"
  op: "Cast"
  input: "Const_3"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/acceleration/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/cylinders/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/displacement/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/horsepower/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/model_year/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/origin/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/weight/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat/axis"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5940885543823242
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5940885543823242
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/hiddenlayer_0/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_0/MatMul"
  input: "dnn/hiddenlayer_0/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/zero"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Mean"
  op: "Mean"
  input: "dnn/zero_fraction/Cast"
  input: "dnn/zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values/tags"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0_activation/tag"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_0_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_0_activation/tag"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.6324555277824402
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6324555277824402
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/hiddenlayer_1/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_1/MatMul"
  input: "dnn/hiddenlayer_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/zero"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/zero_fraction_1/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Mean"
  op: "Mean"
  input: "dnn/zero_fraction_1/Cast"
  input: "dnn/zero_fraction_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values/tags"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1_activation/tag"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_1_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_1_activation/tag"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/read"
  op: "Identity"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "dnn/logits/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/read"
  op: "Identity"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights"
  op: "Identity"
  input: "dnn/logits/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits/biases"
  op: "Identity"
  input: "dnn/logits/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "dnn/logits/MatMul"
  input: "dnn/logits/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/zero_fraction_2/zero"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Equal"
  op: "Equal"
  input: "dnn/logits/BiasAdd"
  input: "dnn/zero_fraction_2/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Mean"
  op: "Mean"
  input: "dnn/zero_fraction_2/Cast"
  input: "dnn/zero_fraction_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/logits_fraction_of_zero_values/tags"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/logits_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/logits_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/logits_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/logits_activation/tag"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/logits_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/logits_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/logits_activation/tag"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/predictions/scores"
  op: "Squeeze"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/predictions/Identity"
  op: "Identity"
  input: "dnn/regression_head/predictions/scores"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss/ToFloat"
  op: "Cast"
  input: "Const_7"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss/sub"
  op: "Sub"
  input: "dnn/logits/BiasAdd"
  input: "dnn/regression_head/mean_squared_loss/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss"
  op: "Square"
  input: "dnn/regression_head/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss/loss/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss/loss"
  op: "Mean"
  input: "dnn/regression_head/mean_squared_loss"
  input: "dnn/regression_head/mean_squared_loss/loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "dnn/regression_head/mean_squared_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/regression_head/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/strided_slice"
  op: "StridedSlice"
  input: "dnn/regression_head/Shape"
  input: "dnn/regression_head/strided_slice/stack"
  input: "dnn/regression_head/strided_slice/stack_1"
  input: "dnn/regression_head/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/regression_head/dnn/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/learning_rate"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/learning_rate/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/learning_rate"
  input: "dnn/regression_head/dnn/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/learning_rate/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/Fill"
  op: "Fill"
  input: "dnn/regression_head/train_op/dnn/gradients/Shape"
  input: "dnn/regression_head/train_op/dnn/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Reshape/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Reshape"
  op: "Reshape"
  input: "dnn/regression_head/train_op/dnn/gradients/Fill"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Tile/multiples"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Tile"
  op: "Tile"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Reshape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Prod"
  op: "Prod"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Prod_1"
  op: "Prod"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape_1"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Maximum"
  op: "Maximum"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Prod_1"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/floordiv"
  op: "FloorDiv"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Prod"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Cast"
  op: "Cast"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/truediv"
  op: "RealDiv"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Tile"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul/x"
  op: "Const"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul"
  op: "Mul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul/x"
  input: "dnn/regression_head/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul_1"
  op: "Mul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/truediv"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Shape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Sum"
  op: "Sum"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul_1"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Sum"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul_1"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Neg"
  op: "Neg"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Neg"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/control_dependency"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/control_dependency"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/learning_rate"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050999999046325684
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_0/weights/part_0/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/regression_head/train_op/dnn/train/learning_rate"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_0/biases/part_0/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/regression_head/train_op/dnn/train/learning_rate"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_1/weights/part_0/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/regression_head/train_op/dnn/train/learning_rate"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_1/biases/part_0/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/regression_head/train_op/dnn/train/learning_rate"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/logits/weights/part_0/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dnn/logits/weights/part_0"
  input: "dnn/regression_head/train_op/dnn/train/learning_rate"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/logits/biases/part_0/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dnn/logits/biases/part_0"
  input: "dnn/regression_head/train_op/dnn/train/learning_rate"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_0/weights/part_0/ApplyGradientDescent"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_0/biases/part_0/ApplyGradientDescent"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_1/weights/part_0/ApplyGradientDescent"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_1/biases/part_0/ApplyGradientDescent"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/logits/weights/part_0/ApplyGradientDescent"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/logits/biases/part_0/ApplyGradientDescent"
}
node {
  name: "dnn/regression_head/train_op/dnn/train/value"
  op: "Const"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train"
  op: "AssignAdd"
  input: "global_step"
  input: "dnn/regression_head/train_op/dnn/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/mean_squared_loss/loss"
  input: "^dnn/regression_head/train_op/dnn/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/mean_squared_loss/loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/total/Assign"
  op: "Assign"
  input: "dnn/regression_head/metrics/mean/total"
  input: "dnn/regression_head/metrics/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/total/read"
  op: "Identity"
  input: "dnn/regression_head/metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/count/Assign"
  op: "Assign"
  input: "dnn/regression_head/metrics/mean/count"
  input: "dnn/regression_head/metrics/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/count/read"
  op: "Identity"
  input: "dnn/regression_head/metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Size"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/ToFloat_1"
  op: "Cast"
  input: "dnn/regression_head/metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Sum"
  op: "Sum"
  input: "dnn/regression_head/mean_squared_loss/loss"
  input: "dnn/regression_head/metrics/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "dnn/regression_head/metrics/mean/total"
  input: "dnn/regression_head/metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "dnn/regression_head/metrics/mean/count"
  input: "dnn/regression_head/metrics/mean/ToFloat_1"
  input: "^dnn/regression_head/mean_squared_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Greater/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Greater"
  op: "Greater"
  input: "dnn/regression_head/metrics/mean/count/read"
  input: "dnn/regression_head/metrics/mean/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/truediv"
  op: "RealDiv"
  input: "dnn/regression_head/metrics/mean/total/read"
  input: "dnn/regression_head/metrics/mean/count/read"
  input: "^add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/value/e"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/value"
  op: "Select"
  input: "dnn/regression_head/metrics/mean/Greater"
  input: "dnn/regression_head/metrics/mean/truediv"
  input: "dnn/regression_head/metrics/mean/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Greater_1/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Greater_1"
  op: "Greater"
  input: "dnn/regression_head/metrics/mean/AssignAdd_1"
  input: "dnn/regression_head/metrics/mean/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/truediv_1"
  op: "RealDiv"
  input: "dnn/regression_head/metrics/mean/AssignAdd"
  input: "dnn/regression_head/metrics/mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/update_op/e"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/update_op"
  op: "Select"
  input: "dnn/regression_head/metrics/mean/Greater_1"
  input: "dnn/regression_head/metrics/mean/truediv_1"
  input: "dnn/regression_head/metrics/mean/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^dnn/hiddenlayer_0/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_0/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_1/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_1/biases/part_0/Assign"
  input: "^dnn/logits/weights/part_0/Assign"
  input: "^dnn/logits/biases/part_0/Assign"
  input: "^dnn/regression_head/dnn/learning_rate/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 10
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "dnn/regression_head/dnn/learning_rate"
        string_val: "dnn/regression_head/metrics/mean/total"
        string_val: "dnn/regression_head/metrics/mean/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 8
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "dnn/regression_head/dnn/learning_rate"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^dnn/regression_head/metrics/mean/total/Assign"
  input: "^dnn/regression_head/metrics/mean/count/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_0_activation"
  input: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_1_activation"
  input: "dnn/dnn/logits_fraction_of_zero_values"
  input: "dnn/dnn/logits_activation"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_a78d2751b1254260aeb54f9a7a909fc4/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 8
          }
        }
        string_val: "dnn/hiddenlayer_0/biases"
        string_val: "dnn/hiddenlayer_0/weights"
        string_val: "dnn/hiddenlayer_1/biases"
        string_val: "dnn/hiddenlayer_1/weights"
        string_val: "dnn/logits/biases"
        string_val: "dnn/logits/weights"
        string_val: "dnn/regression_head/dnn/learning_rate"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 8
          }
        }
        string_val: "10 0,10"
        string_val: "7 10 0,7:0,10"
        string_val: "5 0,5"
        string_val: "10 5 0,10:0,5"
        string_val: "1 0,1"
        string_val: "5 1 0,5:0,1"
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  input: "dnn/logits/biases/part_0/read"
  input: "dnn/logits/weights/part_0/read"
  input: "dnn/regression_head/dnn/learning_rate"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 0,10"
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "7 10 0,7:0,10"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "5 0,5"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 5 0,10:0,5"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "5 1 0,5:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/regression_head/dnn/learning_rate"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "dnn/regression_head/dnn/learning_rate"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 24
}
