node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?\302\207\310\005\260\376\321?\302\207\310\005\260\376\321?\302\207\310\005\260\376\321?\302\207\310\005\260\376\321?v\205X\2061\374\353\277\302\207\310\005\260\376\321?\234\206\020\306p\375\366?v\205X\2061\374\353\277\234\206\020\306p\375\366?\302\207\310\005\260\376\321?v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277\302\207\310\005\260\376\321?\234\206\020\306p\375\366?\234\206\020\306p\375\366?\234\206\020\306p\375\366?\234\206\020\306p\375\366?\234\206\020\306p\375\366?v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277\302\207\310\005\260\376\321?\302\207\310\005\260\376\321?\234\206\020\306p\375\366?\302\207\310\005\260\376\321?v\205X\2061\374\353\277\234\206\020\306p\375\366?\302\207\310\005\260\376\321?\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?\234\206\020\306p\375\366?v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277\302\207\310\005\260\376\321?\021u{%\373<\367\277v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?\234\206\020\306p\375\366?\302\207\310\005\260\376\321?\302\207\310\005\260\376\321?v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?\302\207\310\005\260\376\321?\302\207\310\005\260\376\321?v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?\234\206\020\306p\375\366?\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277\302\207\310\005\260\376\321?\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?\302\207\310\005\260\376\321?\302\207\310\005\260\376\321?\234\206\020\306p\375\366?\234\206\020\306p\375\366?v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?\234\206\020\306p\375\366?v\205X\2061\374\353\277\302\207\310\005\260\376\321?\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277\234\206\020\306p\375\366?\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277\234\206\020\306p\375\366?\302\207\310\005\260\376\321?v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?\234\206\020\306p\375\366?v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?\234\206\020\306p\375\366?\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?\302\207\310\005\260\376\321?\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\225At\203\331\374\322\277v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?\234\206\020\306p\375\366?\234\206\020\306p\375\366?v\205X\2061\374\353\277\234\206\020\306p\375\366?\302\207\310\005\260\376\321?\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?\302\207\310\005\260\376\321?v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277\234\206\020\306p\375\366?v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?\234\206\020\306p\375\366?v\205X\2061\374\353\277\302\207\310\005\260\376\321?\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277\225At\203\331\374\322\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?\234\206\020\306p\375\366?\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\234\206\020\306p\375\366?\234\206\020\306p\375\366?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277\302\207\310\005\260\376\321?v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277v\205X\2061\374\353\277"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "_\252\361w\244(\360?\247\326\010V\304,\356\277\345\025\262\000\241\332\352\277wJ\370\027|\302\353\277\025\316\234\202})\325?\247\326\010V\304,\356\277\n%@\256\243E\362?\330\362-\361\016@\352\277\n%@\256\243E\362?\"U[\253}\210\347\277\025\316\234\202})\325?\300H2f\271\276\333\277\n%@\256\243E\362?x\324\220Y\030\346\360\277\301<:/\355\263\342\277j=a*4\032\367?\375[\272\037\305\017\354\277GN\37466\001\343\277j=a*4\032\367?\022\311\206!\271s\235?\300\330\377\025\177\357\320?\250.\004\213)n\342?w\242\363L\341\003\340?\220 \025\224\242\240\346\277\250.\004\213)n\342?\202\363T\354U\246\376?!\305FN{\337\355\277\2621_\340\266\266\357?\300\330\377\025\177\357\320?x\324\220Y\030\346\360\277\204\231\235\030\337\271\330\277\"U[\253}\210\347\277\220\274!(qT\331\277\202\363T\354U\246\376?\"\263\322\373HO\360?\202\363T\354U\246\376?\216^c*i\025\374?\264Q\210\232\273\010\343?\301<:/\355\263\342\277w\242\363L\341\003\340?\247\326\010V\304,\356\277\234C\231\2434;\347\277\"U[\253}\210\347\277j=a*4\032\367?\314?\225\204z\374\357\277\035\317\004b\356B\204?\t\253\030s\353\216\324?_\252\361w\244(\360?\234\027\277_\240V\317\277k\'t\010\352\'\353\277.FB\256\330@\367?\025\316\234\202})\325?\2621_\340\266\266\357?!\305FN{\337\355\277\314\317\251\341|\245\351\277w\242\363L\341\003\340?\234C\231\2434;\347\277\314?\225\204z\374\357\277w\242\363L\341\003\340?.FB\256\330@\367?!\305FN{\337\355\277#\345o\010\2001\341\277\n%@\256\243E\362?j=a*4\032\367?\251\250+\306\341$\360\277\202\363T\354U\246\376?\314\345\226\003\307\227\365?\235\323\255\0007\344\340\277\345\025\262\000\241\332\352\277\264\211\241\302Xp\350\277#\345o\010\2001\341\277\n%@\256\243E\362?\n%@\256\243E\362?\250\304\224\003\222\234\360?l\261\014J\206K\360\277\300\330\377\025\177\357\320?\265\313\257\325s\277\360\277\025\316\234\202})\325?\345W\300\023\274)\363\277\0262\327\233\353\355\346\277x\324\220Y\030\346\360\277\250.\004\213)n\342?\314?\225\204z\374\357\277#\345o\010\2001\341\277j=a*4\032\367?\2621_\340\266\266\357?\n%@\256\243E\362?\022\311\206!\271s\235?\362\364k^\006{\321\277\300H2f\271\276\333\277\362\364k^\006{\321\277!\305FN{\337\355\277\315xin|\203\001@\247\326\010V\304,\356\277\t\225+Q\241\234\370?\0262\327\233\353\355\346\277wJ\370\027|\302\353\277\216^c*i\025\374?\204\231\235\030\337\271\330\277\234C\231\2434;\347\277\247\326\010V\304,\356\277\204\231\235\030\337\271\330\277\300H2f\271\276\333\277j=a*4\032\367?\250\304\224\003\222\234\360?/\244\000\254\340\177\324\277l\213\256!X\354\314\277\314?\225\204z\374\357\277j=a*4\032\367?\202\363T\354U\246\376?^\314\326\320\272%\345?\300\330\377\025\177\357\320?\300H2f\271\276\333\277#\345o\010\2001\341\277\202\363T\354U\246\376?\220 \025\224\242\240\346\277\247\326\010V\304,\356\277\300\330\377\025\177\357\320?\t\253\030s\353\216\324?\247\326\010V\304,\356\277wJ\370\027|\302\353\277!\305FN{\337\355\277\2621_\340\266\266\357?\300H2f\271\276\333\277\0262\327\233\353\355\346\277\025\316\234\202})\325?\0262\327\233\353\355\346\277\025\316\234\202})\325?\264Q\210\232\273\010\343?\300H2f\271\276\333\277#\345o\010\2001\341\277\n%@\256\243E\362?\250.\004\213)n\342?\022\311\206!\271s\235?\315xin|\203\001@\"\263\322\373HO\360?\265\313\257\325s\277\360\277\202\363T\354U\246\376?\247\326\010V\304,\356\277!\305FN{\337\355\277\t\033K\303%^\337\277\n%@\256\243E\362?/\272\355\315*r\360\277w\242\363L\341\003\340?\202\363T\354U\246\376?x\324\220Y\030\346\360\277\265\313\257\325s\277\360\277\234C\231\2434;\347\277\t\225+Q\241\234\370?#\345o\010\2001\341\277\264\352\326 \327y\003@w\242\363L\341\003\340?!\305FN{\337\355\277\"O\337\217\027\003\363\277\035\317\004b\356B\204?l\261\014J\206K\360\277\"U[\253}\210\347\277\202\363T\354U\246\376?.FB\256\330@\367?\300\330\377\025\177\357\320?\234C\231\2434;\347\277!\305FN{\337\355\277w\242\363L\341\003\340?F\276\347\3313X\351\277x\324\220Y\030\346\360\277\234C\231\2434;\347\277\235\323\255\0007\344\340\277\n%@\256\243E\362?\314\317\251\341|\245\351\277x\324\220Y\030\346\360\277\300\330\377\025\177\357\320?\314?\225\204z\374\357\277!\305FN{\337\355\277\202\363T\354U\246\376?\0262\327\233\353\355\346\277ki\202\033\005w\363\277\"U[\253}\210\347\277\220 \025\224\242\240\346\277\314\317\251\341|\245\351\277\247\326\010V\304,\356\277\t\253\030s\353\216\324?\n\t\327p\363\315\361\277w\242\363L\341\003\340?\247\326\010V\304,\356\277wJ\370\027|\302\353\277\2621_\340\266\266\357?:\233c\312\241\275\350\277\362\364k^\006{\321\277\247\326\010V\304,\356\277wJ\370\027|\302\353\277.FB\256\330@\367?\301<:/\355\263\342\277_\252\361w\244(\360?\300t\014\252M\243\343?\251\250+\306\341$\360\277j=a*4\032\367?\315xin|\203\001@\t\225+Q\241\234\370?#\345o\010\2001\341\277\035\317\004b\356B\204?\n\t\327p\363\315\361\277\204\231\235\030\337\271\330\277\025\316\234\202})\325?\"\263\322\373HO\360?\n%@\256\243E\362?\300\254%\322\352\n\351\277\251\250+\306\341$\360\277\314?\225\204z\374\357\277\264\211\241\302Xp\350\277#\345o\010\2001\341\277#\345o\010\2001\341\277\247\326\010V\304,\356\277\025\316\234\202})\325?\t\253\030s\353\216\324?\300\330\377\025\177\357\320?#\345o\010\2001\341\277\247\326\010V\304,\356\277!\305FN{\337\355\277\0262\327\233\353\355\346\277\344\315\'\322\037\006\356\277GN\37466\001\343\277\2621_\340\266\266\357?l\213\256!X\354\314\277!\305FN{\337\355\277\301<:/\355\263\342\277\0262\327\233\353\355\346\277\301<:/\355\263\342\277\t\225+Q\241\234\370?Sf\346\336\204f\003@_\252\361w\244(\360?\n%@\256\243E\362?\217\220\0007\240\367\354\277\264\352\326 \327y\003@w\242\363L\341\003\340?\202\363T\354U\246\376?wJ\370\027|\302\353\277\314?\225\204z\374\357\277\314?\225\204z\374\357\277\300\330\377\025\177\357\320?\247\326\010V\304,\356\277\247\326\010V\304,\356\277\2621_\340\266\266\357?j=a*4\032\367?\025\316\234\202})\325?!\305FN{\337\355\277\344\233\212\305\350#\375?\202\363T\354U\246\376?_F\376\013s\334\362\277x\324\220Y\030\346\360\277\234C\231\2434;\347\277\220 \025\224\242\240\346\277\0262\327\233\353\355\346\277\251\250+\306\341$\360\277.FB\256\330@\367?F\276\347\3313X\351\277\265\313\257\325s\277\360\277#\345o\010\2001\341\277j=a*4\032\367?_\252\361w\244(\360?S#z\374\340A\362\277.FB\256\330@\367?!\305FN{\337\355\277\300H2f\271\276\333\277j=a*4\032\367?k\'t\010\352\'\353\277\n%@\256\243E\362?#\345o\010\2001\341\277\2621_\340\266\266\357?j=a*4\032\367?\264Q\210\232\273\010\343?\204\367\024i\252\200\361\277\300\330\377\025\177\357\320?w\242\363L\341\003\340?l\261\014J\206K\360\277\0262\327\233\353\355\346\277\331\202BN\021\351\343\277\n%@\256\243E\362?j=a*4\032\367?\2621_\340\266\266\357?/\244\000\254\340\177\324\277\314?\225\204z\374\357\277\264\211\241\302Xp\350\277!\305FN{\337\355\277\345\025\262\000\241\332\352\277_\252\361w\244(\360?_\252\361w\244(\360?!\305FN{\337\355\277wJ\370\027|\302\353\277F\276\347\3313X\351\277!\305FN{\337\355\277!\305FN{\337\355\277\250.\004\213)n\342?\0262\327\233\353\355\346\277\025\316\234\202})\325?\376\345Raa3\361\277\247\326\010V\304,\356\277GN\37466\001\343\277-\350\312]\rz\356\277"
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\273b\tW-S\001@\013\301\215\224\207\035\332\277V\331Fd\375\263\320\277\204\231\231\002\345\t\350\277y\036v\204Y\372\326\277\003\366\302\236u\207\355\277\247\273\223\027C\311\361?T\222\231\234\036\257\333\277\247\273\223\027C\311\361?\367\312F\230p\376\307\277y\036v\204Y\372\326\277\027\203^\332\3611\340\277\247\273\223\027C\311\361?\025<\261\022\023-\353\277\027\203^\332\3611\340\277x\014\300u9\253\367?\032\020v\270\314D\316\277\032\020v\270\314D\316\277\027\354\t\233\214\246\357?\3464\261\254L\322\336\277\203\306\377\317\314)\275\277\032\020v\270\314D\316\277n\231d\207\376\257\201?\251%v\352\037U\343\277ov\3548\346\312\300?\247\273\223\027C\311\361?C\266\023K.\205\004\300tJ\261\336\237\342\343?\203\306\377\317\314)\275\277K\307\316\246\014\031\357\277\242\n\004}\2078\333?\203\306\377\317\314)\275\277\351:\226\"p\205\255?\256\227\335\t3\227\373?\027\354\t\233\214\246\357?\247\273\223\027C\311\361?\023\322\316?6\241\371?ov\3548\346\312\300?\027\203^\332\3611\340\277ov\3548\346\312\300?\003\366\302\236u\207\355\277\013\301\215\224\207\035\332\277\367\312F\230p\376\307\277\027\354\t\233\214\246\357?\003\366\302\236u\207\355\277\032\020v\270\314D\316\277n\231d\207\376\257\201?\020h\354lY\025\330?\367\312F\230p\376\307\277\314j\245\n|\233\351\277K\244\231\233\016\222\362?\203\306\377\317\314)\275\277\341`\354\006\223\272\353?\251%v\352\037U\343\277\013\301\215\224\207\035\332\277\203\306\377\317\314)\275\277M\016|n\353\035\344\277\200\327\212kKA\364\277\314j\245\n|\233\351\277\235\230\234]t\366\362?\025<\261\022\023-\353\277\013\301\215\224\207\035\332\277\247\273\223\027C\311\361?I]\354\323/\215\375?\337\260\223~\031A\347\277@\364\004\264\224\274\000@\335F\261\253<\265\365?\251%v\352\037U\343\277\025<\261\022\023-\353\277y\036v\204Y\372\326\277\314j\245\n|\233\351\277\341`\354\006\223\272\353?\247\273\223\027C\311\361?tJ\261\336\237\342\343?\234@p\231\267\271\360\277\032\020v\270\314D\316\277\360\257\324*\330\341\357\277\203\306\377\317\314)\275\277\203\306\377\317\314)\275\277e(/\210B\333\304\277K\307\316\246\014\031\357\277ov\3548\346\312\300?\025<\261\022\023-\353\277\314j\245\n|\233\351\277\247\273\223\027C\311\361?\341`\354\006\223\272\353?\247\273\223\027C\311\361?C\266\023K.\205\004\300\020h\354lY\025\330?\013\301\215\224\207\035\332\277\355\"\275L\375\316\321?\274kd^\275\372\340\277$\213\037\206(D\004@\362\366\201\362\266\346\344\277\023\322\316?6\241\371?ov\3548\346\312\300?\025<\261\022\023-\353\277I]\354\323/\215\375?\350{^t+\327\323\277\367\312F\230p\376\307\277\337\260\223~\031A\347\277\350{^t+\327\323\277y\036v\204Y\372\326\277\027\354\t\233\214\246\357?\333\271\023~\221\262\002@}~\'\225L\355\337?ov\3548\346\312\300?A)v\035\203\202\361\277B\201\242\341?\277\363?@\364\004\264\224\274\000@}~\'\225L\355\337?n\231d\207\376\257\201?y\036v\204Y\372\326\277\013\301\215\224\207\035\332\277\256\227\335\t3\227\373?\235c\245\244\265@\335\277\013\301\215\224\207\035\332\277y\036v\204Y\372\326\277\244Q\261Df=\320?\003\366\302\236u\207\355\277JLm\327QU\360\277y\036v\204Y\372\326\277\341`\354\006\223\272\353?y\036v\204Y\372\326\277\223\273\033YB\021\307?y\036v\204Y\372\326\277;\310\215\372Mx\346\277\203\306\377\317\314)\275\277y\036v\204Y\372\326\277y\036v\204Y\372\326\277\274kd^\275\372\340\277\247\273\223\027C\311\361?\020h\354lY\025\330?\3464\261\254L\322\336\277\210\305\020\274+N\002@tJ\261\336\237\342\343?K\307\316\246\014\031\357\277\247\273\223\027C\311\361?qS\253\216Gd\352\277^\r\275\032\252\276\354\277;\310\215\372Mx\346\277v\177\"H\216\250\004@;\310\215\372Mx\346\277e(/\210B\333\304\277I]\354\323/\215\375?K\307\316\246\014\031\357\277K\307\316\246\014\031\357\277\204\231\231\002\345\t\350\277\256\227\335\t3\227\373?\235c\245\244\265@\335\277\336\2478w\211\231\007@\314j\245\n|\233\351\277\025<\261\022\023-\353\277K\307\316\246\014\031\357\277\032\020v\270\314D\316\277A)v\035\203\202\361\277`Tj\342\210\303\341\277\023\322\316?6\241\371?*2\370\016*L\355?ov\3548\346\312\300?T\222\231\234\036\257\333\277JLm\327QU\360\277n\231d\207\376\257\201?\032\020v\270\314D\316\277\025<\261\022\023-\353\277\013\301\215\224\207\035\332\277qS\253\216Gd\352\277\247\273\223\027C\311\361?\013\301\215\224\207\035\332\277\323\313\215-\261\245\364\277n\231d\207\376\257\201?\003\366\302\236u\207\355\277\251%v\352\037U\343\277\034\365\305\371\004t\370?\251%v\352\037U\343\277\311\250\226s\342\322\365\277\350{^t+\327\323\277\013\301\215\224\207\035\332\277\3464\261\254L\322\336\277\362\366\201\362\266\346\344\277x\014\300u9\253\367?\003\366\302\236u\207\355\277\203\306\377\317\314)\275\277\337\260\223~\031A\347\277\337\260\223~\031A\347\277tJ\261\336\237\342\343?\032\020v\270\314D\316\277\275\033\275\3466t\345?A)v\035\203\202\361\277JLm\327QU\360\277\230\217\340\376\373(\352?\027\203^\332\3611\340\277\247\273\223\027C\311\361?\3464\261\254L\322\336\277\025<\261\022\023-\353\277\027\354\t\233\214\246\357?\210\305\020\274+N\002@C\342)\255\214\243\005@\302\357\201\214\360\213\330\277\032\020v\270\314D\316\277\025<\261\022\023-\353\277n\231d\207\376\257\201?\203\306\377\317\314)\275\277\027\354\t\233\214\246\357?\247\273\223\027C\311\361?1Mj|\302h\325\277\033\235\2315H7\366\277^\r\275\032\252\276\354\277\005=pfT\214\342\277\013\301\215\224\207\035\332\277y\036v\204Y\372\326\277\300\205\237\271\023\000\367\277y\036v\204Y\372\326\277n\231d\207\376\257\201?\3464\261\254L\322\336\277C\266\023K.\205\004\300\337\260\223~\031A\347\277M\016|n\353\035\344\277\223\273\033YB\021\307?\251%v\352\037U\343\277\211m^\250\236!\313\277\320a\253Z\324\031\343?\244Q\261Df=\320?K\307\316\246\014\031\357\277\027\203^\332\3611\340\277\003\366\302\236u\207\355\277\027\203^\332\3611\340\277\247\273\223\027C\311\361?\021E1\022\213\236\006@\247\273\223\027C\311\361?\247\273\223\027C\311\361?\274kd^\275\372\340\277\336\2478w\211\231\007@n\231d\207\376\257\201?\256\227\335\t3\227\373?\025<\261\022\023-\353\277\003\366\302\236u\207\355\277^\r\275\032\252\276\354\277\203\306\377\317\314)\275\277.\343\207\251\345\334\363\277\362\366\201\362\266\346\344\277\341`\354\006\223\272\353?I]\354\323/\215\375?\203\306\377\317\314)\275\277K\307\316\246\014\031\357\277@\364\004\264\224\274\000@\023\322\316?6\241\371?\272$\267\226\336\365\353\277C\266\023K.\205\004\300\337\260\223~\031A\347\277\211m^\250\236!\313\277\244Q\261Df=\320?\033\235\2315H7\366\277T\307\220U\335d\361?\032\020v\270\314D\316\277K\307\316\246\014\031\357\277\362\366\201\362\266\346\344\277\335F\261\253<\265\365?\247\273\223\027C\311\361?\323\313\215-\261\245\364\2778^\253\'q\354\364?\247\336\310\"AP\356\277\3464\261\254L\322\336\277\256\227\335\t3\227\373?\337\260\223~\031A\347\277\027\354\t\233\214\246\357?\350{^t+\327\323\277<x\346\202\307\361\352?I]\354\323/\215\375?ov\3548\346\312\300?A)v\035\203\202\361\277ov\3548\346\312\300?\013\301\215\224\207\035\332\277qS\253\216Gd\352\277%^3ip4\312?2\356\343\336p\255\244\277\247\273\223\027C\311\361?x\014\300u9\253\367?<x\346\202\307\361\352?b\004\303j\002=\346?\200\327\212kKA\364\277\337\260\223~\031A\347\277^\r\275\032\252\276\354\277\337\260\223~\031A\347\277\247\273\223\027C\311\361?\247\273\223\027C\311\361?^\r\275\032\252\276\354\277\204\231\231\002\345\t\350\277\032\020v\270\314D\316\277A)v\035\203\202\361\277\274kd^\275\372\340\277ov\3548\346\312\300?\244Q\261Df=\320?\223\273\033YB\021\307?\3574s[\035\036\361\277\350{^t+\327\323\277\032\020v\270\314D\316\277\272$\267\226\336\365\353\277"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\2532\260S=\021\000@\340\'j\007\252~\352\277p]\302in\313\346\277\307\025\354\372q\307\362\277\2349x\250K\320\317?\212\035P\313\364s\357\277\\\256\247\234J\004\364?\001\377\030\365\023\350\327\277J\205\231v7\316\373?\314\363\260T\006\247\340\277\033\250\235R/\366\317?5{\315\300\007\245\332\277#g\370_z\033\366?5\331O\0036m\363\277\017\226\226\250\256 \347\277\\o\201\332P\251\367?\360\313\347\023R\361\346\277n\225\244\226\360\030\340\277l\023\377\346\370\033\364?\360\227\3777\225/\266?\242`x\263s~\347?\'\343\373[-L\315?\336,\270\t\257*\341?|\230 sl!\344\277\005G+\257\004\221\243\277\254oz\343/-\373?-F7\277\333\216\361\277=#\037\312\347/\360?\206\223\352\370\337\233\321?\327zCE \337\362\277\333\270t0\031\325\313\277.\314Cf\354\037\334\277`\024\3345\201Z\343\277\203\314H\263\007\267\371?\\\355\315^D_\360?\310(\274\005\310\204\002@\315e\205Q\316\003\345?[\020\221\326\221`\333?\343m\324^\033\347\351\277\377\276\204q\211\014\350?\270\260\224\260\303\257\362\277\367\350\027\372\315\206\246\2775\017\317\227&\325\345\277\024A\307\327\305^\362?]Y\314\207%/\365\277\354\177\247\350\371\373\307\277\026\315\251R\275|\334?\366\231\315\356\241\343\361?\372,5\311\010+\212\277\0028\203\363w\026\352\277q`\255\323\341\221\366?4\362\357\277\324\255\325?\376\222(\230Ge\376?\255P\036c\373\277\356\277\253\364\376\270^\335\334\277\270\3114mb\360\324?\262\243\210\023zb\333\277\010\261\215\271\2423\366\277\276\307\335\030\r\036\310?\346\365O\342\371p\365?\003\243\005\217\263\030\360\277\205\207>Q\022\202\302\277\202\361`\367\321P\340?\334\213\266\331\202\300\350?\003\243\005\217\263\030\360\277\310\01707\334\232\370?\205\3343v\210\267\346?\307m\262y\nc\321?\032S\250-\271\300\353\277\243\376\216y,\"\360\277\236\226\353\003(\323\337\277\314\267u\374\177\022\364?\313\224\300PG^\364?\367G\335C\360\324\342?\355\216$\352\351{\361\277h\332\242\264\251:\355?\017`\027\024\276\270\364\277\330\240\034\341}\241\255\277\327\260\302\331\020G\345\277\330\240\034\341}\241\255\2772\322\013n\276_\360\277\021+ Q\2571\353?\025\017\241n\331=\363\277U\3742\330\273\270\345\277\211\375\205\211/\206\377?\232\003\337\003\n\010\370?\320f\r#\260\344\335?\010_\203\376\237\304\301\277Caj\3051\206\356?\030R \\\327\337\322\2771)\267\301\310\"\274\277\237\225ov\202\005\361\277\356-\321M\231M\376?D>\247M\344\204\363\277\375os\354\016\261\376?\352\210\\\342\027<\335\277kS\2416\230D\357\277\272\346\031gR!\002@\3607\346<3\301\333\277%\351\235\017r\030\342\277L\211\362\241;\025\357\277\245Eu^CX\336\277\203\263\250\366hv\327\277.$\n\345\204\273\372?4\260\336\223g\214\371?\312\002<\"\013t\305?\323\0169\330\002\374\323\277\371K6o\364\033\366\2775\323\223?\240@\371?\220\3535\246Df\372?\006n\016\314\244\221\346?\005KY l\335\346?\356\003\312@\324>\340\277\021\243\226\001\274Z\324\277\254oz\343/-\373?s\243,\301\3373\346\277\364=\256D\005\001\360\277V\204\274\'\257\217\334?\202*\313\3655\177\322?\276_\036\013\3374\361\277\003\243\005\217\263\030\360\277\236*\355\332F\003\353\277\240\230Z\340\365\313\340?\345\376/\226\264\253\252\277\203d\211\245\331\315\302\277|{A\233\032\372\323?\006\037\357z\025\351\341\2772Llm\001\327\273\277\to\226\235\206r\337?\201m>\237\367\r\330\2776\236\202l@Y\332\277OP\224\347\023\372\366?\214F\333J\024\265\336?rzW\366Q\353w\277\002\3422\2677\032\002@\277\211%\030\244C\357?\327zCE \337\362\277lC\302\267SW\354?\253R\201\373\214\245\365\277\375\363{4\230\223\361\277\275\244(m\324i\310?\023\303zS\322\250\371?\276_\036\013\3374\361\277\023\314!\201\333\233\343?\200\305\004\036\220\251\366?K\3550\250\377\t\362\277\033\233u\035\274\016\362\2775{\315\300\007\245\332\277\342\274\363\257\252\217\356?P\017\361|7Y\316\277\333g\255|\n\354\272?\002\203;M\356*\340?\023\010]\331a0\360\277\346\240t\315\324\233\366\277\3067[\301\177\250\277?\206;$zG\000\363\277\021\243\226\001\274Z\324\277[\363\220\210d2\000@\256\020|\023\\\227\363?\035|3\255\330\001\333?c\332s\372\026\001\223\277\035\341\337t-w\361\277+x](\310\257\360?\270h\307\300\300a\354\277\250K=f\025\230\362\277,\277C\r\337\345\356\277\251\227\213]\202\332\314?\027\252\346\332o{\361?s\243,\301\3373\346\277\034\276*\311\364\302\361\277a\004\375\266<m\340?\366D\362\331|\016\363\277\2227\\\301K\373\363\277TD\007.I\255\001@\201m>\237\367\r\330\277\216\316<\276\241\336\364\277\031\256?\006t\302\344\277\344\016\326\216GQ\342\277!n0\261\265\025\337\277\303\243%\312\276\267\351\277 *56\022\246\340?%t\370\270\207U\363\277$Nr\263,;\331?N\317\\\371\254}\356\277x\261\264\353\316N\354\277j\261#y\306\014\370?\210?}\245KG\326\277>\207\312v\377,\271\277[6\027\334\354z\365\277\325\017\301\251\344\334\354\277F\331\354\271z\302\361?\2617\212\352\230\222\346\277\033\023\006\336\031\230\360?\340t\250o\010\237\227?\264Gu\255\031\223\363\277~\276\300\210\030\234\363?\306\354z\213\243\346\370?P\365\374\016Y\370\375?]\225\007\340\253\303\321\2776\265\213p\253\363\272\277oC\264\353>\n\361\277\331\275\3022\036\201\322\277\317}\026\'\033\177\316\277G\003\364\306?\321\337?j\375W`\342\356\354?dk\255\335\030\221\336\277\270\260\224\260\303\257\362\277\347\337\232\217\316\366\362\277\266E\022\025\210\255\354\277$\313\243\014\222\030\277\277U\3742\330\273\270\345\277\213\210\322f0v\365\277\334\212b(C\240\272?G\003\364\306?\321\337?\235R\360\210\204c\341?7\330@\034\344\247\272\277\236*\355\332F\003\353\277\334\276J\004\000b\353\277\\\254\020\344\026^\262\2773\365\300\031\367\023\360\277\213\205\347\374\274\257\325\277\362`q\274R\002\353?\n\364\014\247\240\325\325\277\321\0019\177\365\301\346\277H\034l\247xd\341\277\345\376/\226\264\253\252\277#\2433\270\000\260\342\277\027\252\346\332o{\361?U\300\367\1775$\371?\333h\001.J\014\351?w\0177.\375\026\365?\363\266\272\222\010X\355\277\000\365\003\006zt\372?_y\260\331;}\332?Z\264j\306j\327\003@3n\315g\372j\355\277\231\346\345\033g\200\362\277\270\260\224\260\303\257\362\277\303\313(x\374\027\340?|\032\324\356xk\353\277\261\271=f\245\334\355\277W\"\323\355g3\365?sg\361hY\237\371?C\023\237%\342\375\267\277\375\363{4\230\223\361\277\376\035\203A]\242\357?\\\3614V]\363\376?\331Ba\030\236\221\371\277\213\210\322f0v\365\277\253\006M\024q\303\340\277\303\243%\312\276\267\351\277A\266+\312\005\373\327\277\351\034^\2716l\350\277\347\331\336\3138\312\370?\200\203\363\361\"\210\352\2772\322\013n\276_\360\277\347B\362\212\246\323\335\277-\001U9L\007\373?\215\344\361\020\315X\367?\234\321\270\232\035\347\370\277\245\334a\237\325N\371?\371K6o\364\033\366\277\373\000pIi\272\304\277\nL\323%9q\364?\365\331o>A\014\355\277\207t\216x\253.\365?\340\223h0\213N\337\277\037\021\275U\331\022\317?\0323\336\353\363\322\373?\216#\030\323\306\263\363?ut\361\301f\331\366\277d\314\032\212\272\037\347?J\224\026x\'N\305?sm\255,\357\313\363\277\371B\217A\353(\354\277j\313\027\347\244m\310\277\255\035\2128~\036\354?\221M\021\024wu\366?,\347F\273\034F\345?\214F\333J\024\265\336?\010\261\215\271\2423\366\277{\367\036C@\267\353\277\310\261\255\364\255\322\357\277\236*\355\332F\003\353\277\242\336\3047g4\340?\333h\001.J\014\351?L\211\362\241;\025\357\277q\002+\221\263\311\355\277\317\336\203\323\274\r\347\277\255P\036c\373\277\356\277V\241\233\377\000\267\354\277\342\027\213\210e\221\347?\323\3465*\305\233\315\277\356\242\\\2242\260\307\277\031x\300q\203Z\362\277A\357\225\310i)\352\277\207\260\311\3201\303\341\277\021^\264{,\323\355\277"
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\312B\013\310\027\323\361?\033]\023\227\035\302\364?\037f\253/\002\\\330?\247\200ykyn\256\277\211\311R(\336d\344?\363P\006\362#\310\355?\026T{\3768(\341\277R\034\366S\030\352\347?\352>\326\300Z\224\326\277\261\347\345\265\014\014\342?\261\347\345\265\014\014\342?<\204>\2750\003\326?Y\275\233:P\344\354\277\262\013\362\206vf\337?Y\275\233:P\344\354\277M\023^\2733P\364\277R\034\366S\030\352\347?}\344\034\030\317\236\335\277Y\275\233:P\344\354\277\317)\205\024\245\r\335?*\376b\306\351B\352?\033o\231\177Ro\353?\272\371\025\347\325?\311?\037f\253/\002\\\330?\267\210\213\234D\006\347\277M\023^\2733P\364\277\033]\023\227\035\302\364?O\253k\t\207\260\305\277\321\343$\260\333O\227\277\363>\200\t\357\032\367?\267\210\213\234D\006\347\277\2562\037\323\314\023\317\277\026T{\3768(\341\277M\023^\2733P\364\277\375\370U\354-a\361\277\026T{\3768(\341\277H>\277{%\006\000\300TsR\355vz\214?(\365\312-\005\251\366\277\214\300d\330\215Q\321?<\204>\2750\003\326?\261\347\345\265\014\014\342?\377nE\356)b\312\277Y\275\233:P\344\354\277\3565\350p\n\201\343\277TsR\355vz\214?\266\344\304: \271\277?\002\305\261\267\241T\342\277\352>\326\300Z\224\326\277\261\347\345\265\014\014\342?0\237\010\255!=\357\277TsR\355vz\214?\272\371\025\347\325?\311?O\253k\t\207\260\305\277\344\257\266\302WG\370?\363P\006\362#\310\355?C{\246$Li\362?`\253\277\232\257\275\346?kw\033f#\261\367?\267\210\213\234D\006\347\277z:\211\341F\221\345?\345\301<\253\214\364\356?\357GnY?.\372\277\357GnY?.\372\277\352>\326\300Z\224\326\277b\242\'\002\313#\363\277\351r\317\0311\344\005\300\224s\220\247\372\370\374?\277v\257\374\243\337\340?\026T{\3768(\341\277\314\027U\343\333\331\345\277\340\246\036*s\255\344\277Y\275\233:P\344\354\277M\023^\2733P\364\277z:\211\341F\221\345?\033]\023\227\035\302\364?<\204>\2750\003\326?\272\371\025\347\325?\311?\375\370U\354-a\361\277\352>\326\300Z\224\326\277\007\316IP\206\356\365?\033]\023\227\035\302\364?\r\254+\004/\217\375?\033]\023\227\035\302\364?\352>\326\300Z\224\326\277\272\371\025\347\325?\311?\357GnY?.\372\277\261\347\345\265\014\014\342?\317)\205\024\245\r\335?\272\371\025\347\325?\311?\207\300\272\217\371\312\360\277\0136<\0023\216\304?\357GnY?.\372\277\352>\326\300Z\224\326\277Y\275\233:P\344\354\2770\237\010\255!=\357\277\377nE\356)b\312\277\236-f\2129?\367\277\302 C3,\355\330\277\352>\326\300Z\224\326\277<\204>\2750\003\326?\352>\326\300Z\224\326\277\037f\253/\002\\\330?\026T{\3768(\341\277O\253k\t\207\260\305\277\314\027U\343\333\331\345\277\207\300\272\217\371\312\360\277<\204>\2750\003\326?\377nE\356)b\312\277\375\370U\354-a\361\277O\253k\t\207\260\305\277\037f\253/\002\\\330?\201\333.\310~\213\352\277\321\343$\260\333O\227\277\236-f\2129?\367\277\272\371\025\347\325?\311?\352>\326\300Z\224\326\277\266\263A\201\200\377\362?\321\343$\260\333O\227\277\033o\231\177Ro\353?;{\374\333\267\342\321\277TsR\355vz\214??bv(E\035\375\277z:\211\341F\221\345?TsR\355vz\214?e\2319\262z\020\360?\363P\006\362#\310\355?\272\371\025\347\325?\311?\3655=\225T\304\003@\272\371\025\347\325?\311?\261\347\345\265\014\014\342?\352>\326\300Z\224\326\277\240\347\221$\344\376\300\277e\2319\262z\020\360?\236-f\2129?\367\277\321\343$\260\333O\227\277\341Gp\177\202\232\270\277pKCc\250}\001\300b\242\'\002\313#\363\277\312B\013\310\027\323\361?\344\257\266\302WG\370?\267\210\213\234D\006\347\277\352>\326\300Z\224\326\277\033]\023\227\035\302\364?y\017\323\374\n\230\371\277\007\316IP\206\356\365?<\204>\2750\003\326?\336\321\324\016\257\246\360?\357GnY?.\372\277\223\253\273N)\345\251?H>\277{%\006\000\300/\343\231i\032?\000@TsR\355vz\214?\033]\023\227\035\302\364?\037f\253/\002\\\330?/\354\334\335\264\225\363?\363>\200\t\357\032\367?M\023^\2733P\364\277\232\002\260\245\375E\333\277\003H\030\242\323\264\332?kw\033f#\261\367?\261\347\345\265\014\014\342?\312B\013\310\027\323\361?\026T{\3768(\341\277\261\347\345\265\014\014\342?\352>\326\300Z\224\326\277\373\023\037I\375d\013@\201\333.\310~\213\352\277\363P\006\362#\310\355?\3655=\225T\304\003@TsR\355vz\214?(]\021q\332U\266?\302 C3,\355\330\277\375\370U\354-a\361\277O\253k\t\207\260\305\277kw\033f#\261\367?O\253k\t\207\260\305\277\240\347\221$\344\376\300\277\214\300d\330\215Q\321?\352>\326\300Z\224\326\277\243\371\301U\2552\350\277\033]\023\227\035\302\364?\261\347\345\265\014\014\342?\272\371\025\347\325?\311?\352>\326\300Z\224\326\277\377nE\356)b\312\277O\253k\t\207\260\305\277\024f\001\347m\325\367\277\033]\023\227\035\302\364?\377nE\356)b\312\277\201\333.\310~\213\352\277D.\322\363\270\020\356\277\375\370U\354-a\361\277\261\347\345\265\014\014\342?\026T{\3768(\341\277M\023^\2733P\364\277H>\277{%\006\000\300\026T{\3768(\341\277\266\344\304: \271\277?\272\371\025\347\325?\311?kw\033f#\261\367?\317)\205\024\245\r\335?O\253k\t\207\260\305\277\201\333.\310~\213\352\277\375\370U\354-a\361\277\026T{\3768(\341\277W\360\035Q\235\266\001@D\215,\r\201\026\351?\277v\257\374\243\337\340?z:\211\341F\221\345?kw\033f#\261\367?\r\254+\004/\217\375?D\215,\r\201\026\351?\277v\257\374\243\337\340?\003H\030\242\323\264\332?\232\002\260\245\375E\333\277e\2319\262z\020\360?*\376b\306\351B\352?\352>\326\300Z\224\326\277\261\347\345\265\014\014\342?\267\210\213\234D\006\347\277\243\371\301U\2552\350\277D.\322\363\270\020\356\277\370\034b\275\227\273\376?\272\371\025\347\325?\311?CY\210\330\364\t\372?(]\021q\332U\266?Y\275\233:P\344\354\277\231X\307J+\365\002\300\236-f\2129?\367\277\267\210\213\234D\006\347\277\247\200ykyn\256\277H>\277{%\006\000\300\352>\326\300Z\224\326\277M\023^\2733P\364\277\201\333.\310~\213\352\277\214\300d\330\215Q\321?\272\371\025\347\325?\311?\211\311R(\336d\344?\370$.\357\250\224\007@\266\344\304: \271\277?\026T{\3768(\341\277\330\332\302^\377\271\363\277\272\371\025\347\325?\311?\214\300d\330\215Q\321?\301eK2\256l\004\300\236-f\2129?\367\277\363P\006\362#\310\355?z:\211\341F\221\345?R\034\366S\030\352\347?TsR\355vz\214?\267\210\213\234D\006\347\277n]\311K\335*\010@\352>\326\300Z\224\326\277TsR\355vz\214?\001\340\3178\273\233\354?\312B\013\310\027\323\361?\267\210\213\234D\006\347\277TsR\355vz\214?\037f\253/\002\\\330?Y\275\233:P\344\354\277\302 C3,\355\330\277D\215,\r\201\026\351?Y\275\233:P\344\354\277\302 C3,\355\330\277\340\246\036*s\255\344\277\377nE\356)b\312\277\003\3277\240\326\001\371\277\375\370U\354-a\361\277\033]\023\227\035\302\364?\201\275\357\313x\361\315?\266\263A\201\200\377\362?\352>\326\300Z\224\326\277\026T{\3768(\341\277\375\370U\354-a\361\277\0136<\0023\216\304?\026T{\3768(\341\277M\023^\2733P\364\2770\237\010\255!=\357\277\266\344\304: \271\277?R\034\366S\030\352\347?\026T{\3768(\341\277\003H\030\242\323\264\332?\341Gp\177\202\232\270\277M\023^\2733P\364\277\236-f\2129?\367\277\037f\253/\002\\\330?}\344\034\030\317\236\335\277O\253k\t\207\260\305\277\274\231\357f:y\003@\037f\253/\002\\\330?\363P\006\362#\310\355?(]\021q\332U\266?;{\374\333\267\342\321\277\033]\023\227\035\302\364?\261\347\345\265\014\014\342?\2562\037\323\314\023\317\277\363P\006\362#\310\355?"
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\345F\002\265\r\014\372\277\345F\002\265\r\014\352\277\345F\002\265\r\014\352\277\345F\002\265\r\014\372?C/\254x^]\341?C/\254x^]\361?C/\254x^]\361\277\345F\002\265\r\014\372\277C/\254x^]\321\277C/\254x^]\321\277C/\254x^]\321\277\024;\327\026\266\264\365?\000\000\000\000\000\000\000\000C/\254x^]\321?\345F\002\265\r\014\372?C/\254x^]\361\277\345F\002\265\r\014\372\277C/\254x^]\341?\345F\002\265\r\014\352\277C/\254x^]\341?C/\254x^]\321?\000\000\000\000\000\000\000\000C/\254x^]\321\277C/\254x^]\341\277\024;\327\026\266\264\365\277\345F\002\265\r\014\352\277\024;\327\026\266\264\365\277\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024;\327\026\266\264\365?\345F\002\265\r\014\352\277\024;\327\026\266\264\365?\345F\002\265\r\014\352\277C/\254x^]\361\277C/\254x^]\321?\345F\002\265\r\014\352\277\345F\002\265\r\014\372\277C/\254x^]\341?\345F\002\265\r\014\372?\000\000\000\000\000\000\000\000C/\254x^]\321?C/\254x^]\321\277C/\254x^]\341?\345F\002\265\r\014\352\277C/\254x^]\361?\345F\002\265\r\014\372\277C/\254x^]\341?\000\000\000\000\000\000\000\000C/\254x^]\321\277C/\254x^]\361?\000\000\000\000\000\000\000\000\024;\327\026\266\264\365\277C/\254x^]\341\277C/\254x^]\361\277\345F\002\265\r\014\372?\345F\002\265\r\014\352\277\345F\002\265\r\014\372?\000\000\000\000\000\000\000\000C/\254x^]\321\277\024;\327\026\266\264\365\277\345F\002\265\r\014\372?C/\254x^]\361?\345F\002\265\r\014\372\277\345F\002\265\r\014\352\277C/\254x^]\341\277C/\254x^]\321?\345F\002\265\r\014\372\277\024;\327\026\266\264\365?\345F\002\265\r\014\372?\024;\327\026\266\264\365\277\000\000\000\000\000\000\000\000C/\254x^]\341?\024;\327\026\266\264\365\277\345F\002\265\r\014\372\277\024;\327\026\266\264\365?C/\254x^]\321\277\024;\327\026\266\264\365?\345F\002\265\r\014\352\277C/\254x^]\361?C/\254x^]\321\277C/\254x^]\361?C/\254x^]\321\277\024;\327\026\266\264\365\277\024;\327\026\266\264\365\277C/\254x^]\341\277C/\254x^]\361\277\345F\002\265\r\014\352\277C/\254x^]\341\277\000\000\000\000\000\000\000\000C/\254x^]\321?\024;\327\026\266\264\365?C/\254x^]\321?C/\254x^]\361\277C/\254x^]\321?\345F\002\265\r\014\352\277C/\254x^]\321?\345F\002\265\r\014\352?\024;\327\026\266\264\365\277\024;\327\026\266\264\365?C/\254x^]\361\277\000\000\000\000\000\000\000\000\345F\002\265\r\014\372?C/\254x^]\361?C/\254x^]\321\277\345F\002\265\r\014\372\277C/\254x^]\341?\024;\327\026\266\264\365?C/\254x^]\341?\345F\002\265\r\014\352?C/\254x^]\361\277\345F\002\265\r\014\352?C/\254x^]\341\277\345F\002\265\r\014\352?C/\254x^]\341?\024;\327\026\266\264\365\277C/\254x^]\361\277\024;\327\026\266\264\365\277C/\254x^]\361?\345F\002\265\r\014\352?\024;\327\026\266\264\365?\345F\002\265\r\014\372?\345F\002\265\r\014\352\277\345F\002\265\r\014\372\277\345F\002\265\r\014\372?\345F\002\265\r\014\352\277\345F\002\265\r\014\352?C/\254x^]\361\277C/\254x^]\341\277\345F\002\265\r\014\352?\345F\002\265\r\014\352?C/\254x^]\321\277\345F\002\265\r\014\352\277C/\254x^]\341?\345F\002\265\r\014\352?\345F\002\265\r\014\352\277\345F\002\265\r\014\352?\345F\002\265\r\014\352?\345F\002\265\r\014\372\277\000\000\000\000\000\000\000\000C/\254x^]\321?\024;\327\026\266\264\365?\345F\002\265\r\014\372\277\024;\327\026\266\264\365\277C/\254x^]\321?C/\254x^]\321?\345F\002\265\r\014\352?C/\254x^]\361?\024;\327\026\266\264\365?\345F\002\265\r\014\352\277\345F\002\265\r\014\372?\345F\002\265\r\014\372\277C/\254x^]\321\277C/\254x^]\361?\024;\327\026\266\264\365\277C/\254x^]\341\277C/\254x^]\361?\345F\002\265\r\014\372?\024;\327\026\266\264\365\277\345F\002\265\r\014\352?\345F\002\265\r\014\352?C/\254x^]\361\277C/\254x^]\321?C/\254x^]\321\277\024;\327\026\266\264\365\277\000\000\000\000\000\000\000\000\345F\002\265\r\014\372?\345F\002\265\r\014\352?\000\000\000\000\000\000\000\000\345F\002\265\r\014\372?\000\000\000\000\000\000\000\000\024;\327\026\266\264\365\277\345F\002\265\r\014\372?\345F\002\265\r\014\352?\345F\002\265\r\014\352\277\345F\002\265\r\014\352?\345F\002\265\r\014\352\277C/\254x^]\361?C/\254x^]\361?\345F\002\265\r\014\372?C/\254x^]\341\277C/\254x^]\341?C/\254x^]\341\277C/\254x^]\341\277C/\254x^]\321\277C/\254x^]\341?C/\254x^]\321?C/\254x^]\321\277C/\254x^]\361?\024;\327\026\266\264\365\277\024;\327\026\266\264\365?\345F\002\265\r\014\352?\024;\327\026\266\264\365?C/\254x^]\361\277\345F\002\265\r\014\372?C/\254x^]\321\277\000\000\000\000\000\000\000\000\345F\002\265\r\014\372\277\345F\002\265\r\014\372\277C/\254x^]\321?\345F\002\265\r\014\352\277\024;\327\026\266\264\365\277C/\254x^]\341?\345F\002\265\r\014\352\277C/\254x^]\341?\345F\002\265\r\014\352\277\345F\002\265\r\014\352\277C/\254x^]\341?\345F\002\265\r\014\372?\000\000\000\000\000\000\000\000\345F\002\265\r\014\352?C/\254x^]\361\277\345F\002\265\r\014\372\277\000\000\000\000\000\000\000\000C/\254x^]\321?\024;\327\026\266\264\365?C/\254x^]\361?C/\254x^]\321?\000\000\000\000\000\000\000\000C/\254x^]\361\277C/\254x^]\361\277C/\254x^]\321\277\345F\002\265\r\014\352?\345F\002\265\r\014\352?\024;\327\026\266\264\365?\345F\002\265\r\014\372?C/\254x^]\361?\024;\327\026\266\264\365?\345F\002\265\r\014\352?\345F\002\265\r\014\372\277\345F\002\265\r\014\352\277C/\254x^]\361\277\000\000\000\000\000\000\000\000\345F\002\265\r\014\372\277\000\000\000\000\000\000\000\000\024;\327\026\266\264\365\277\345F\002\265\r\014\352?\345F\002\265\r\014\372?\024;\327\026\266\264\365?C/\254x^]\341?C/\254x^]\361\277C/\254x^]\361?C/\254x^]\341\277\000\000\000\000\000\000\000\000C/\254x^]\321\277\024;\327\026\266\264\365?\345F\002\265\r\014\372\277C/\254x^]\321\277\024;\327\026\266\264\365\277C/\254x^]\361?C/\254x^]\361?C/\254x^]\321?C/\254x^]\321\277C/\254x^]\361?C/\254x^]\321?C/\254x^]\361\277C/\254x^]\361?C/\254x^]\321\277C/\254x^]\361\277C/\254x^]\341\277C/\254x^]\341\277\345F\002\265\r\014\352\277C/\254x^]\341?C/\254x^]\341?\345F\002\265\r\014\352\277\024;\327\026\266\264\365?C/\254x^]\321?\000\000\000\000\000\000\000\000C/\254x^]\341?\345F\002\265\r\014\352\277C/\254x^]\321?\024;\327\026\266\264\365?C/\254x^]\341?\024;\327\026\266\264\365\277\345F\002\265\r\014\352?\345F\002\265\r\014\372\277C/\254x^]\341?\000\000\000\000\000\000\000\000\024;\327\026\266\264\365\277C/\254x^]\341?C/\254x^]\341?C/\254x^]\321\277C/\254x^]\341\277C/\254x^]\341?C/\254x^]\361?\345F\002\265\r\014\372\277C/\254x^]\361\277C/\254x^]\341?\024;\327\026\266\264\365?\345F\002\265\r\014\372\277\000\000\000\000\000\000\000\000C/\254x^]\341\277C/\254x^]\341\277C/\254x^]\341?\345F\002\265\r\014\372?C/\254x^]\341\277C/\254x^]\361\277C/\254x^]\341?C/\254x^]\361\277"
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "uH;\305\001\356\345\277\267\206O\036\244 \375?\267\206O\036\244 \375?|\342\261;\243)\342?uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?\267\206O\036\244 \375?\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?|\342\261;\243)\342?\267\206O\036\244 \375?uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?\267\206O\036\244 \375?|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?|\342\261;\243)\342?\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277|\342\261;\243)\342?\267\206O\036\244 \375?|\342\261;\243)\342?uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?\267\206O\036\244 \375?\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?\267\206O\036\244 \375?\267\206O\036\244 \375?|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?\267\206O\036\244 \375?|\342\261;\243)\342?uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?\267\206O\036\244 \375?|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?|\342\261;\243)\342?\267\206O\036\244 \375?|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?\267\206O\036\244 \375?uH;\305\001\356\345\277|\342\261;\243)\342?|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?|\342\261;\243)\342?\267\206O\036\244 \375?uH;\305\001\356\345\277|\342\261;\243)\342?|\342\261;\243)\342?uH;\305\001\356\345\277\267\206O\036\244 \375?\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?|\342\261;\243)\342?|\342\261;\243)\342?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?\267\206O\036\244 \375?|\342\261;\243)\342?\267\206O\036\244 \375?\267\206O\036\244 \375?uH;\305\001\356\345\277uH;\305\001\356\345\277uH;\305\001\356\345\277|\342\261;\243)\342?\267\206O\036\244 \375?uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277|\342\261;\243)\342?uH;\305\001\356\345\277\267\206O\036\244 \375?\267\206O\036\244 \375?\267\206O\036\244 \375?|\342\261;\243)\342?"
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\000\000\000\000\000\000\"@\000\000\000\000\000\0004@\000\000\000\000\000\0006@\000\000\000\000\000\000B@ffffff3@fffff\346@@\000\000\000\000\000\000,@\000\000\000\000\000\0009@\000\000\000\000\000\0000@\000\000\000\000\000\0008@\000\000\000\000\000\0003@\232\231\231\231\231\231:@\000\000\000\000\000\0000@\000\000\000\000\000\300@@\000\000\000\000\000\000B@\000\000\000\000\000\000*@\000\000\000\000\000\0009@\000\000\000\000\000\200;@\000\000\000\000\000\000.@\315\314\314\314\314\3144@\000\000\000\000\000\0003@\000\000\000\000\000\2001@\000\000\000\000\000\0002@\000\000\000\000\000\000:@\000\000\000\000\000\0002@\000\000\000\000\000\000*@\000\000\000\000\000\0009@\000\000\000\000\000\000*@\000\000\000\000\000\0006@\000\000\000\000\000\200B@\000\000\000\000\000\0004@33333s@@\000\000\000\000\000\0005@\000\000\000\000\000\000,@\000\000\000\000\000\2001@\000\000\000\000\000\000&@\000\000\000\000\000\000.@fffff\3463@\000\000\000\000\000\000@@\000\000\000\000\000\2002@\000\000\000\000\000\000>@\000\000\000\000\000\0007@fffff\3467@\000\000\000\000\000\000*@\315\314\314\314\314LF@\000\000\000\000\000\0006@\232\231\231\231\231\2314@\000\000\000\000\000\000/@\000\000\000\000\000\0002@333333@@\000\000\000\000\000\000-@\000\000\000\000\000\0002@\000\000\000\000\000\000,@\000\000\000\000\000\000<@\000\000\000\000\000\000<@\000\000\000\000\000\0000@\000\000\000\000\000\000<@\000\000\000\000\000\200@@\000\000\000\000\000\000.@\000\000\000\000\000\000,@\000\000\000\000\000\000B@ffffff:@\000\000\000\000\000\0002@\000\000\000\000\000\000&@\000\000\000\000\000\000<@\000\000\000\000\000\000/@\000\000\000\000\000\000,@\232\231\231\231\231\031<@\000\000\000\000\000\000A@\000\000\000\000\000\000<@\000\000\000\000\000\200:@\000\000\000\000\000\2001@\000\000\000\000\000\000,@\000\000\000\000\000\0002@\232\231\231\231\231\331B@\000\000\000\000\000\0002@\000\000\000\000\000\200C@\000\000\000\000\000\0002@33333\2637@\000\000\000\000\000\0006@ffffffD@\000\000\000\000\000\000.@\000\000\000\000\000\000:@\000\000\000\000\000\0006@\000\000\000\000\000\000*@\000\000\000\000\000\000*@\000\000\000\000\000\000.@\000\000\000\000\000\0005@\000\000\000\000\000\2000@\000\000\000\000\000\2008@ffffff9@\000\000\000\000\000\300@@\000\000\000\000\000\000&@\000\000\000\000\000\000=@\000\000\000\000\000\000*@\000\000\000\000\000\2005@\000\000\000\000\000@A@\000\000\000\000\000\000(@\315\314\314\314\314\3149@\000\000\000\000\000\0007@\000\000\000\000\000\000<@\000\000\000\000\000\000:@\000\000\000\000\000\000<@\000\000\000\000\000\000.@\000\000\000\000\000\000$@\000\000\000\000\000\0001@\000\000\000\000\000\2007@\315\314\314\314\314\014B@fffff\3460@\000\000\000\000\000\000*@3333333@\000\000\000\000\000\0002@\000\000\000\000\000\300@@\232\231\231\231\231\0319@\000\000\000\000\000\000,@\000\000\000\000\000\0006@\000\000\000\000\000\000;@\232\231\231\231\231\0313@\000\000\000\000\000\2005@fffff&@@\000\000\000\000\000\000C@\000\000\000\000\000\000:@\000\000\000\000\000\0001@\000\000\000\000\000\000;@\000\000\000\000\000\0003@3333334@\000\000\000\000\000\0006@\000\000\000\000\000\0003@fffff\3467@ffffff<@\000\000\000\000\000\0007@\000\000\000\000\000\000,@\232\231\231\231\231\0312@\315\314\314\314\314\3143@\000\000\000\000\000\000(@\000\000\000\000\000\0001@\315\314\314\314\314\014A@\000\000\000\000\000\000.@\000\000\000\000\000\200=@\000\000\000\000\000\200?@33333\263>@\000\000\000\000\000\000&@\000\000\000\000\000\000>@\000\000\000\000\000\2002@\000\000\000\000\000\0000@\315\314\314\314\314\314?@\232\231\231\231\231\231B@\232\231\231\231\231\231?@\000\000\000\000\000\000*@\000\000\000\000\000\000;@\000\000\000\000\000\000,@\000\000\000\000\000\000.@\315\314\314\314\314\014@@\000\000\000\000\000\000?@\000\000\000\000\000\0004@\315\314\314\314\314\014C@\000\000\000\000\000\000?@\000\000\000\000\000\000*@\000\000\000\000\000\000/@\232\231\231\231\231\2314@\000\000\000\000\000\0005@\000\000\000\000\000\200>@\000\000\000\000\000\0000@\000\000\000\000\000\0009@\000\000\000\000\000\000@@\000\000\000\000\000\000B@333333;@\000\000\000\000\000\000*@\000\000\000\000\000\000A@\000\000\000\000\000\000=@\000\000\000\000\000\0000@\000\000\000\000\000\000@@\232\231\231\231\231\331A@\000\000\000\000\000\000(@ffffff;@\000\000\000\000\000\000=@\000\000\000\000\000\200B@\000\000\000\000\000\200A@\000\000\000\000\000\000?@\000\000\000\000\000\000:@33333\2631@\000\000\000\000\000\000?@\000\000\000\000\000\000.@\000\000\000\000\000\000=@fffff\346>@\000\000\000\000\000\000.@\000\000\000\000\000\0007@\232\231\231\231\231Y@@\000\000\000\000\000\000;@\232\231\231\231\231YA@\000\000\000\000\000\2000@\000\000\000\000\000\000>@\000\000\000\000\000\000.@\000\000\000\000\000\000C@\000\000\000\000\000\000=@\000\000\000\000\000\000*@\000\000\000\000\000\000.@\000\000\000\000\000\000$@\000\000\000\000\000\2009@\000\000\000\000\000\0007@\000\000\000\000\000\000>@3333337@\000\000\000\000\000\0002@3333333@\000\000\000\000\000\000.@\000\000\000\000\000\0004@\315\314\314\314\314\214E@\000\000\000\000\000\000?@\000\000\000\000\000\0009@\315\314\314\314\314L6@\000\000\000\000\000\0004@\000\000\000\000\000\000:@\000\000\000\000\000\2006@\000\000\000\000\000\2004@\232\231\231\231\231\2311@\232\231\231\231\231\2317@\000\000\000\000\000\000:@\000\000\000\000\000\000:@\000\000\000\000\000\0002@\000\000\000\000\000\0009@\000\000\000\000\000\0008@\232\231\231\231\231\2311@\315\314\314\314\314\314:@fffff\346=@\000\000\000\000\000\000=@333333B@333333;@\000\000\000\000\000\2002@\000\000\000\000\000\000,@\000\000\000\000\000\000,@\000\000\000\000\000\000.@\000\000\000\000\000\000;@\000\000\000\000\000\000,@\000\000\000\000\000\0006@\000\000\000\000\000\000*@\232\231\231\231\231\031A@\000\000\000\000\000\000C@\315\314\314\314\314\014A@\000\000\000\000\000\2004@\000\000\000\000\000\0007@fffff&A@\000\000\000\000\000\0000@\000\000\000\000\000\2000@\000\000\000\000\000\0004@333333A@\000\000\000\000\000\000.@\000\000\000\000\000\0000@\000\000\000\000\000\200A@33333sD@\315\314\314\314\314L?@\000\000\000\000\000\2009@\000\000\000\000\000\0009@33333\263E@\000\000\000\000\000\0000@\000\000\000\000\000\0008@\315\314\314\314\314LG@\000\000\000\000\000\0007@\000\000\000\000\000\000(@\000\000\000\000\000\000,@\000\000\000\000\000\000?@\000\000\000\000\000\000*@\315\314\314\314\314\014B@\315\314\314\314\314\3147@\000\000\000\000\000\000*@\232\231\231\231\231\331@@\000\000\000\000\000\000/@\000\000\000\000\000\0009@\232\231\231\231\231\0312@\000\000\000\000\000\000(@\000\000\000\000\000\0001@\315\314\314\314\314\214A@\232\231\231\231\231\2312@\000\000\000\000\000\0002@fffff\346?@\000\000\000\000\000\000:@\315\314\314\314\314L4@\000\000\000\000\000\000*@\000\000\000\000\000\000,@3333334@3333330@\000\000\000\000\000\200@@\000\000\000\000\000\000:@\000\000\000\000\000\200=@\232\231\231\231\231\031@@\000\000\000\000\000\0000@\000\000\000\000\000\0001@\000\000\000\000\000\000>@\000\000\000\000\000\200@@\000\000\000\000\000\0008@\000\000\000\000\000\2008@\000\000\000\000\000\000=@\000\000\000\000\000\0000@\232\231\231\231\231\2315@\000\000\000\000\000\0006@\000\000\000\000\000\000@@\000\000\000\000\000\000<@\232\231\231\231\231\0315@\000\000\000\000\000\000:@"
      }
    }
  }
}
node {
  name: "IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cond/Switch"
  op: "Switch"
  input: "IsVariableInitialized"
  input: "IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/switch_t"
  op: "Identity"
  input: "cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/switch_f"
  op: "Identity"
  input: "cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/pred_id"
  op: "Identity"
  input: "IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/read"
  op: "Identity"
  input: "cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/Merge"
  op: "Merge"
  input: "cond/Switch_1"
  input: "cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "cond/Merge"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/acceleration/ToFloat"
  op: "Cast"
  input: "Const_4"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/cylinders/ToFloat"
  op: "Cast"
  input: "Const"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/displacement/ToFloat"
  op: "Cast"
  input: "Const_1"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/horsepower/ToFloat"
  op: "Cast"
  input: "Const_2"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/model_year/ToFloat"
  op: "Cast"
  input: "Const_5"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/origin/ToFloat"
  op: "Cast"
  input: "Const_6"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/weight/ToFloat"
  op: "Cast"
  input: "Const_3"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/acceleration/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/cylinders/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/displacement/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/horsepower/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/model_year/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/origin/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/weight/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat/axis"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5940885543823242
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5940885543823242
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/hiddenlayer_0/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_0/MatMul"
  input: "dnn/hiddenlayer_0/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/zero"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Mean"
  op: "Mean"
  input: "dnn/zero_fraction/Cast"
  input: "dnn/zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values/tags"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0_activation/tag"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_0_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_0_activation/tag"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.6324555277824402
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6324555277824402
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/hiddenlayer_1/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_1/MatMul"
  input: "dnn/hiddenlayer_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/zero"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/zero_fraction_1/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Mean"
  op: "Mean"
  input: "dnn/zero_fraction_1/Cast"
  input: "dnn/zero_fraction_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values/tags"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1_activation/tag"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_1_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_1_activation/tag"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/read"
  op: "Identity"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "dnn/logits/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/read"
  op: "Identity"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights"
  op: "Identity"
  input: "dnn/logits/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits/biases"
  op: "Identity"
  input: "dnn/logits/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "dnn/logits/MatMul"
  input: "dnn/logits/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/zero_fraction_2/zero"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Equal"
  op: "Equal"
  input: "dnn/logits/BiasAdd"
  input: "dnn/zero_fraction_2/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Mean"
  op: "Mean"
  input: "dnn/zero_fraction_2/Cast"
  input: "dnn/zero_fraction_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/logits_fraction_of_zero_values/tags"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/logits_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/logits_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/logits_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/logits_activation/tag"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/logits_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/logits_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/logits_activation/tag"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/predictions/scores"
  op: "Squeeze"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/predictions/Identity"
  op: "Identity"
  input: "dnn/regression_head/predictions/scores"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss/ToFloat"
  op: "Cast"
  input: "Const_7"
  input: "^add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss/sub"
  op: "Sub"
  input: "dnn/logits/BiasAdd"
  input: "dnn/regression_head/mean_squared_loss/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss"
  op: "Square"
  input: "dnn/regression_head/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss/loss/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss/loss"
  op: "Mean"
  input: "dnn/regression_head/mean_squared_loss"
  input: "dnn/regression_head/mean_squared_loss/loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "dnn/regression_head/mean_squared_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/regression_head/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/strided_slice"
  op: "StridedSlice"
  input: "dnn/regression_head/Shape"
  input: "dnn/regression_head/strided_slice/stack"
  input: "dnn/regression_head/strided_slice/stack_1"
  input: "dnn/regression_head/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/regression_head/dnn/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/learning_rate"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/learning_rate/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/learning_rate"
  input: "dnn/regression_head/dnn/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/learning_rate/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/Fill"
  op: "Fill"
  input: "dnn/regression_head/train_op/dnn/gradients/Shape"
  input: "dnn/regression_head/train_op/dnn/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Reshape/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Reshape"
  op: "Reshape"
  input: "dnn/regression_head/train_op/dnn/gradients/Fill"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Tile/multiples"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Tile"
  op: "Tile"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Reshape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Prod"
  op: "Prod"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Prod_1"
  op: "Prod"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape_1"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Maximum"
  op: "Maximum"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Prod_1"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/floordiv"
  op: "FloorDiv"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Prod"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Cast"
  op: "Cast"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/truediv"
  op: "RealDiv"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Tile"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul/x"
  op: "Const"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul"
  op: "Mul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul/x"
  input: "dnn/regression_head/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul_1"
  op: "Mul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/truediv"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Shape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Sum"
  op: "Sum"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul_1"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Sum"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul_1"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Neg"
  op: "Neg"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Neg"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/control_dependency"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/tuple/control_dependency"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 298
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/learning_rate"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050999999046325684
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_0/weights/part_0/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/regression_head/train_op/dnn/train/learning_rate"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_0/biases/part_0/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/regression_head/train_op/dnn/train/learning_rate"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_1/weights/part_0/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/regression_head/train_op/dnn/train/learning_rate"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_1/biases/part_0/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/regression_head/train_op/dnn/train/learning_rate"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/logits/weights/part_0/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dnn/logits/weights/part_0"
  input: "dnn/regression_head/train_op/dnn/train/learning_rate"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/logits/biases/part_0/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dnn/logits/biases/part_0"
  input: "dnn/regression_head/train_op/dnn/train/learning_rate"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update"
  op: "NoOp"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_0/weights/part_0/ApplyGradientDescent"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_0/biases/part_0/ApplyGradientDescent"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_1/weights/part_0/ApplyGradientDescent"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_1/biases/part_0/ApplyGradientDescent"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/logits/weights/part_0/ApplyGradientDescent"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/logits/biases/part_0/ApplyGradientDescent"
}
node {
  name: "dnn/regression_head/train_op/dnn/train/value"
  op: "Const"
  input: "^add"
  input: "^dnn/regression_head/train_op/dnn/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train"
  op: "AssignAdd"
  input: "global_step"
  input: "dnn/regression_head/train_op/dnn/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/mean_squared_loss/loss"
  input: "^dnn/regression_head/train_op/dnn/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/mean_squared_loss/loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/total/Assign"
  op: "Assign"
  input: "dnn/regression_head/metrics/mean/total"
  input: "dnn/regression_head/metrics/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/total/read"
  op: "Identity"
  input: "dnn/regression_head/metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/count/Assign"
  op: "Assign"
  input: "dnn/regression_head/metrics/mean/count"
  input: "dnn/regression_head/metrics/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/count/read"
  op: "Identity"
  input: "dnn/regression_head/metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Size"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/ToFloat_1"
  op: "Cast"
  input: "dnn/regression_head/metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Sum"
  op: "Sum"
  input: "dnn/regression_head/mean_squared_loss/loss"
  input: "dnn/regression_head/metrics/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "dnn/regression_head/metrics/mean/total"
  input: "dnn/regression_head/metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "dnn/regression_head/metrics/mean/count"
  input: "dnn/regression_head/metrics/mean/ToFloat_1"
  input: "^dnn/regression_head/mean_squared_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Greater/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Greater"
  op: "Greater"
  input: "dnn/regression_head/metrics/mean/count/read"
  input: "dnn/regression_head/metrics/mean/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/truediv"
  op: "RealDiv"
  input: "dnn/regression_head/metrics/mean/total/read"
  input: "dnn/regression_head/metrics/mean/count/read"
  input: "^add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/value/e"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/value"
  op: "Select"
  input: "dnn/regression_head/metrics/mean/Greater"
  input: "dnn/regression_head/metrics/mean/truediv"
  input: "dnn/regression_head/metrics/mean/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Greater_1/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Greater_1"
  op: "Greater"
  input: "dnn/regression_head/metrics/mean/AssignAdd_1"
  input: "dnn/regression_head/metrics/mean/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/truediv_1"
  op: "RealDiv"
  input: "dnn/regression_head/metrics/mean/AssignAdd"
  input: "dnn/regression_head/metrics/mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/update_op/e"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/update_op"
  op: "Select"
  input: "dnn/regression_head/metrics/mean/Greater_1"
  input: "dnn/regression_head/metrics/mean/truediv_1"
  input: "dnn/regression_head/metrics/mean/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^dnn/hiddenlayer_0/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_0/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_1/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_1/biases/part_0/Assign"
  input: "^dnn/logits/weights/part_0/Assign"
  input: "^dnn/logits/biases/part_0/Assign"
  input: "^dnn/regression_head/dnn/learning_rate/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 10
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "dnn/regression_head/dnn/learning_rate"
        string_val: "dnn/regression_head/metrics/mean/total"
        string_val: "dnn/regression_head/metrics/mean/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 8
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "dnn/regression_head/dnn/learning_rate"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^dnn/regression_head/metrics/mean/total/Assign"
  input: "^dnn/regression_head/metrics/mean/count/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_0_activation"
  input: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_1_activation"
  input: "dnn/dnn/logits_fraction_of_zero_values"
  input: "dnn/dnn/logits_activation"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_8afa9408a2f64ade85f363e3db2a97ed/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 8
          }
        }
        string_val: "dnn/hiddenlayer_0/biases"
        string_val: "dnn/hiddenlayer_0/weights"
        string_val: "dnn/hiddenlayer_1/biases"
        string_val: "dnn/hiddenlayer_1/weights"
        string_val: "dnn/logits/biases"
        string_val: "dnn/logits/weights"
        string_val: "dnn/regression_head/dnn/learning_rate"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 8
          }
        }
        string_val: "10 0,10"
        string_val: "7 10 0,7:0,10"
        string_val: "5 0,5"
        string_val: "10 5 0,10:0,5"
        string_val: "1 0,1"
        string_val: "5 1 0,5:0,1"
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  input: "dnn/logits/biases/part_0/read"
  input: "dnn/logits/weights/part_0/read"
  input: "dnn/regression_head/dnn/learning_rate"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 0,10"
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "7 10 0,7:0,10"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "5 0,5"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 5 0,10:0,5"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "5 1 0,5:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/regression_head/dnn/learning_rate"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "dnn/regression_head/dnn/learning_rate"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 24
}
